{
	"id": "a662ed7de3bdd7ceb87d5695a39ea548",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.4.24",
	"solcLongVersion": "0.4.24+commit.e67f0147",
	"input": {
		"language": "Solidity",
		"sources": {
			"Solidity Patterns/State_Machine.sol": {
				"content": "// Enable a contract to go through different stages with different corresponding functionality exposed.\n\npragma solidity ^0.4.20;\n\ncontract StateMachine {\n\n    enum Stages {\n        AcceptingBlindBids,\n        RevealBids,\n        WinnerDetermined,\n        Finished\n    }\n\n    Stages public stage = Stages.AcceptingBlindBids;\n\n    uint public creationTime = now;\n\n    modifier atStage(Stages _stage) {\n        require(stage == _stage);\n        _;\n    }\n\n    modifier transitionAfter() {\n        _;\n        nextStage();\n    }\n\n    modifier timedTransitions() {\n        if (stage == Stages.AcceptingBlindBids && now >= creationTime + 6 days) {\n            nextStage();\n        }\n        if (stage == Stages.RevealBids && now >= creationTime + 10 days) {\n            nextStage();\n        }\n        _;\n    }\n\n    function bid() public payable timedTransitions atStage(Stages.AcceptingBlindBids) {\n        // Implement biding here\n    }\n\n    function reveal() public timedTransitions atStage(Stages.RevealBids) {\n        // Implement reveal of bids here\n    }\n\n    function claimGoods() public timedTransitions atStage(Stages.WinnerDetermined) transitionAfter {\n        // Implement handling of goods here\n    }\n\n    function cleanup() public atStage(Stages.Finished) {\n        // Implement cleanup of auction here\n    }\n\n    function nextStage() internal {\n        stage = Stages(uint(stage) + 1);\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Solidity Patterns/State_Machine.sol": {
				"StateMachine": {
					"abi": [
						{
							"constant": false,
							"inputs": [],
							"name": "bid",
							"outputs": [],
							"payable": true,
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "cleanup",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "reveal",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "stage",
							"outputs": [
								{
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "creationTime",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "claimGoods",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"Solidity Patterns/State_Machine.sol\":131:1400  contract StateMachine {... */\n  mstore(0x40, 0x80)\n    /* \"Solidity Patterns/State_Machine.sol\":298:323  Stages.AcceptingBlindBids */\n  0x0\n    /* \"Solidity Patterns/State_Machine.sol\":276:323  Stages public stage = Stages.AcceptingBlindBids */\n  dup1\n  exp(0x100, 0x0)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0x3\n  dup2\n  gt\n  iszero\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Solidity Patterns/State_Machine.sol\":357:360  now */\n  timestamp\n    /* \"Solidity Patterns/State_Machine.sol\":330:360  uint public creationTime = now */\n  0x1\n  sstore\n    /* \"Solidity Patterns/State_Machine.sol\":131:1400  contract StateMachine {... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_2\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x0\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_2:\n    /* \"Solidity Patterns/State_Machine.sol\":131:1400  contract StateMachine {... */\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"Solidity Patterns/State_Machine.sol\":131:1400  contract StateMachine {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x4))\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0x1998aeef\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x3cecd719\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xa475b5dd\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xc040e6b8\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xd8270dce\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xec29b405\n      eq\n      tag_7\n      jumpi\n    tag_1:\n      0x0\n      dup1\n      revert\n        /* \"Solidity Patterns/State_Machine.sol\":808:930  function bid() public payable timedTransitions atStage(Stages.AcceptingBlindBids) {... */\n    tag_2:\n      tag_8\n      jump(tag_9)\n    tag_8:\n      stop\n        /* \"Solidity Patterns/State_Machine.sol\":1211:1314  function cleanup() public atStage(Stages.Finished) {... */\n    tag_3:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_10\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_10:\n        /* \"Solidity Patterns/State_Machine.sol\":1211:1314  function cleanup() public atStage(Stages.Finished) {... */\n      pop\n      tag_11\n      jump(tag_12)\n    tag_11:\n      stop\n        /* \"Solidity Patterns/State_Machine.sol\":936:1053  function reveal() public timedTransitions atStage(Stages.RevealBids) {... */\n    tag_4:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_13\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_13:\n        /* \"Solidity Patterns/State_Machine.sol\":936:1053  function reveal() public timedTransitions atStage(Stages.RevealBids) {... */\n      pop\n      tag_14\n      jump(tag_15)\n    tag_14:\n      stop\n        /* \"Solidity Patterns/State_Machine.sol\":276:323  Stages public stage = Stages.AcceptingBlindBids */\n    tag_5:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_16\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_16:\n        /* \"Solidity Patterns/State_Machine.sol\":276:323  Stages public stage = Stages.AcceptingBlindBids */\n      pop\n      tag_17\n      jump(tag_18)\n    tag_17:\n      mload(0x40)\n      dup1\n      dup3\n      0x3\n      dup2\n      gt\n      iszero\n      tag_19\n      jumpi\n      invalid\n    tag_19:\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Solidity Patterns/State_Machine.sol\":330:360  uint public creationTime = now */\n    tag_6:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_20\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_20:\n        /* \"Solidity Patterns/State_Machine.sol\":330:360  uint public creationTime = now */\n      pop\n      tag_21\n      jump(tag_22)\n    tag_21:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Solidity Patterns/State_Machine.sol\":1059:1205  function claimGoods() public timedTransitions atStage(Stages.WinnerDetermined) transitionAfter {... */\n    tag_7:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_23\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_23:\n        /* \"Solidity Patterns/State_Machine.sol\":1059:1205  function claimGoods() public timedTransitions atStage(Stages.WinnerDetermined) transitionAfter {... */\n      pop\n      tag_24\n      jump(tag_25)\n    tag_24:\n      stop\n        /* \"Solidity Patterns/State_Machine.sol\":808:930  function bid() public payable timedTransitions atStage(Stages.AcceptingBlindBids) {... */\n    tag_9:\n        /* \"Solidity Patterns/State_Machine.sol\":580:605  Stages.AcceptingBlindBids */\n      0x0\n        /* \"Solidity Patterns/State_Machine.sol\":571:605  stage == Stages.AcceptingBlindBids */\n      0x3\n      dup2\n      gt\n      iszero\n      tag_27\n      jumpi\n      invalid\n    tag_27:\n        /* \"Solidity Patterns/State_Machine.sol\":571:576  stage */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Solidity Patterns/State_Machine.sol\":571:605  stage == Stages.AcceptingBlindBids */\n      0x3\n      dup2\n      gt\n      iszero\n      tag_28\n      jumpi\n      invalid\n    tag_28:\n      eq\n        /* \"Solidity Patterns/State_Machine.sol\":571:637  stage == Stages.AcceptingBlindBids && now >= creationTime + 6 days */\n      dup1\n      iszero\n      tag_29\n      jumpi\n      pop\n        /* \"Solidity Patterns/State_Machine.sol\":631:637  6 days */\n      0x7e900\n        /* \"Solidity Patterns/State_Machine.sol\":616:628  creationTime */\n      sload(0x1)\n        /* \"Solidity Patterns/State_Machine.sol\":616:637  creationTime + 6 days */\n      add\n        /* \"Solidity Patterns/State_Machine.sol\":609:612  now */\n      timestamp\n        /* \"Solidity Patterns/State_Machine.sol\":609:637  now >= creationTime + 6 days */\n      lt\n      iszero\n        /* \"Solidity Patterns/State_Machine.sol\":571:637  stage == Stages.AcceptingBlindBids && now >= creationTime + 6 days */\n    tag_29:\n        /* \"Solidity Patterns/State_Machine.sol\":567:675  if (stage == Stages.AcceptingBlindBids && now >= creationTime + 6 days) {... */\n      iszero\n      tag_30\n      jumpi\n        /* \"Solidity Patterns/State_Machine.sol\":653:664  nextStage() */\n      tag_31\n        /* \"Solidity Patterns/State_Machine.sol\":653:662  nextStage */\n      tag_32\n        /* \"Solidity Patterns/State_Machine.sol\":653:664  nextStage() */\n      jump\t// in\n    tag_31:\n        /* \"Solidity Patterns/State_Machine.sol\":567:675  if (stage == Stages.AcceptingBlindBids && now >= creationTime + 6 days) {... */\n    tag_30:\n        /* \"Solidity Patterns/State_Machine.sol\":697:714  Stages.RevealBids */\n      0x1\n        /* \"Solidity Patterns/State_Machine.sol\":688:714  stage == Stages.RevealBids */\n      0x3\n      dup2\n      gt\n      iszero\n      tag_33\n      jumpi\n      invalid\n    tag_33:\n        /* \"Solidity Patterns/State_Machine.sol\":688:693  stage */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Solidity Patterns/State_Machine.sol\":688:714  stage == Stages.RevealBids */\n      0x3\n      dup2\n      gt\n      iszero\n      tag_34\n      jumpi\n      invalid\n    tag_34:\n      eq\n        /* \"Solidity Patterns/State_Machine.sol\":688:747  stage == Stages.RevealBids && now >= creationTime + 10 days */\n      dup1\n      iszero\n      tag_35\n      jumpi\n      pop\n        /* \"Solidity Patterns/State_Machine.sol\":740:747  10 days */\n      0xd2f00\n        /* \"Solidity Patterns/State_Machine.sol\":725:737  creationTime */\n      sload(0x1)\n        /* \"Solidity Patterns/State_Machine.sol\":725:747  creationTime + 10 days */\n      add\n        /* \"Solidity Patterns/State_Machine.sol\":718:721  now */\n      timestamp\n        /* \"Solidity Patterns/State_Machine.sol\":718:747  now >= creationTime + 10 days */\n      lt\n      iszero\n        /* \"Solidity Patterns/State_Machine.sol\":688:747  stage == Stages.RevealBids && now >= creationTime + 10 days */\n    tag_35:\n        /* \"Solidity Patterns/State_Machine.sol\":684:785  if (stage == Stages.RevealBids && now >= creationTime + 10 days) {... */\n      iszero\n      tag_36\n      jumpi\n        /* \"Solidity Patterns/State_Machine.sol\":763:774  nextStage() */\n      tag_37\n        /* \"Solidity Patterns/State_Machine.sol\":763:772  nextStage */\n      tag_32\n        /* \"Solidity Patterns/State_Machine.sol\":763:774  nextStage() */\n      jump\t// in\n    tag_37:\n        /* \"Solidity Patterns/State_Machine.sol\":684:785  if (stage == Stages.RevealBids && now >= creationTime + 10 days) {... */\n    tag_36:\n        /* \"Solidity Patterns/State_Machine.sol\":863:888  Stages.AcceptingBlindBids */\n      0x0\n        /* \"Solidity Patterns/State_Machine.sol\":426:432  _stage */\n      dup1\n        /* \"Solidity Patterns/State_Machine.sol\":417:432  stage == _stage */\n      0x3\n      dup2\n      gt\n      iszero\n      tag_39\n      jumpi\n      invalid\n    tag_39:\n        /* \"Solidity Patterns/State_Machine.sol\":417:422  stage */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Solidity Patterns/State_Machine.sol\":417:432  stage == _stage */\n      0x3\n      dup2\n      gt\n      iszero\n      tag_40\n      jumpi\n      invalid\n    tag_40:\n      eq\n        /* \"Solidity Patterns/State_Machine.sol\":409:433  require(stage == _stage) */\n      iszero\n      iszero\n      tag_41\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_41:\n        /* \"Solidity Patterns/State_Machine.sol\":794:795  _ */\n      pop\n        /* \"Solidity Patterns/State_Machine.sol\":808:930  function bid() public payable timedTransitions atStage(Stages.AcceptingBlindBids) {... */\n      jump\t// out\n        /* \"Solidity Patterns/State_Machine.sol\":1211:1314  function cleanup() public atStage(Stages.Finished) {... */\n    tag_12:\n        /* \"Solidity Patterns/State_Machine.sol\":1245:1260  Stages.Finished */\n      0x3\n        /* \"Solidity Patterns/State_Machine.sol\":426:432  _stage */\n      dup1\n        /* \"Solidity Patterns/State_Machine.sol\":417:432  stage == _stage */\n      0x3\n      dup2\n      gt\n      iszero\n      tag_44\n      jumpi\n      invalid\n    tag_44:\n        /* \"Solidity Patterns/State_Machine.sol\":417:422  stage */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Solidity Patterns/State_Machine.sol\":417:432  stage == _stage */\n      0x3\n      dup2\n      gt\n      iszero\n      tag_45\n      jumpi\n      invalid\n    tag_45:\n      eq\n        /* \"Solidity Patterns/State_Machine.sol\":409:433  require(stage == _stage) */\n      iszero\n      iszero\n      tag_46\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_46:\n        /* \"Solidity Patterns/State_Machine.sol\":1211:1314  function cleanup() public atStage(Stages.Finished) {... */\n      pop\n      jump\t// out\n        /* \"Solidity Patterns/State_Machine.sol\":936:1053  function reveal() public timedTransitions atStage(Stages.RevealBids) {... */\n    tag_15:\n        /* \"Solidity Patterns/State_Machine.sol\":580:605  Stages.AcceptingBlindBids */\n      0x0\n        /* \"Solidity Patterns/State_Machine.sol\":571:605  stage == Stages.AcceptingBlindBids */\n      0x3\n      dup2\n      gt\n      iszero\n      tag_49\n      jumpi\n      invalid\n    tag_49:\n        /* \"Solidity Patterns/State_Machine.sol\":571:576  stage */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Solidity Patterns/State_Machine.sol\":571:605  stage == Stages.AcceptingBlindBids */\n      0x3\n      dup2\n      gt\n      iszero\n      tag_50\n      jumpi\n      invalid\n    tag_50:\n      eq\n        /* \"Solidity Patterns/State_Machine.sol\":571:637  stage == Stages.AcceptingBlindBids && now >= creationTime + 6 days */\n      dup1\n      iszero\n      tag_51\n      jumpi\n      pop\n        /* \"Solidity Patterns/State_Machine.sol\":631:637  6 days */\n      0x7e900\n        /* \"Solidity Patterns/State_Machine.sol\":616:628  creationTime */\n      sload(0x1)\n        /* \"Solidity Patterns/State_Machine.sol\":616:637  creationTime + 6 days */\n      add\n        /* \"Solidity Patterns/State_Machine.sol\":609:612  now */\n      timestamp\n        /* \"Solidity Patterns/State_Machine.sol\":609:637  now >= creationTime + 6 days */\n      lt\n      iszero\n        /* \"Solidity Patterns/State_Machine.sol\":571:637  stage == Stages.AcceptingBlindBids && now >= creationTime + 6 days */\n    tag_51:\n        /* \"Solidity Patterns/State_Machine.sol\":567:675  if (stage == Stages.AcceptingBlindBids && now >= creationTime + 6 days) {... */\n      iszero\n      tag_52\n      jumpi\n        /* \"Solidity Patterns/State_Machine.sol\":653:664  nextStage() */\n      tag_53\n        /* \"Solidity Patterns/State_Machine.sol\":653:662  nextStage */\n      tag_32\n        /* \"Solidity Patterns/State_Machine.sol\":653:664  nextStage() */\n      jump\t// in\n    tag_53:\n        /* \"Solidity Patterns/State_Machine.sol\":567:675  if (stage == Stages.AcceptingBlindBids && now >= creationTime + 6 days) {... */\n    tag_52:\n        /* \"Solidity Patterns/State_Machine.sol\":697:714  Stages.RevealBids */\n      0x1\n        /* \"Solidity Patterns/State_Machine.sol\":688:714  stage == Stages.RevealBids */\n      0x3\n      dup2\n      gt\n      iszero\n      tag_54\n      jumpi\n      invalid\n    tag_54:\n        /* \"Solidity Patterns/State_Machine.sol\":688:693  stage */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Solidity Patterns/State_Machine.sol\":688:714  stage == Stages.RevealBids */\n      0x3\n      dup2\n      gt\n      iszero\n      tag_55\n      jumpi\n      invalid\n    tag_55:\n      eq\n        /* \"Solidity Patterns/State_Machine.sol\":688:747  stage == Stages.RevealBids && now >= creationTime + 10 days */\n      dup1\n      iszero\n      tag_56\n      jumpi\n      pop\n        /* \"Solidity Patterns/State_Machine.sol\":740:747  10 days */\n      0xd2f00\n        /* \"Solidity Patterns/State_Machine.sol\":725:737  creationTime */\n      sload(0x1)\n        /* \"Solidity Patterns/State_Machine.sol\":725:747  creationTime + 10 days */\n      add\n        /* \"Solidity Patterns/State_Machine.sol\":718:721  now */\n      timestamp\n        /* \"Solidity Patterns/State_Machine.sol\":718:747  now >= creationTime + 10 days */\n      lt\n      iszero\n        /* \"Solidity Patterns/State_Machine.sol\":688:747  stage == Stages.RevealBids && now >= creationTime + 10 days */\n    tag_56:\n        /* \"Solidity Patterns/State_Machine.sol\":684:785  if (stage == Stages.RevealBids && now >= creationTime + 10 days) {... */\n      iszero\n      tag_57\n      jumpi\n        /* \"Solidity Patterns/State_Machine.sol\":763:774  nextStage() */\n      tag_58\n        /* \"Solidity Patterns/State_Machine.sol\":763:772  nextStage */\n      tag_32\n        /* \"Solidity Patterns/State_Machine.sol\":763:774  nextStage() */\n      jump\t// in\n    tag_58:\n        /* \"Solidity Patterns/State_Machine.sol\":684:785  if (stage == Stages.RevealBids && now >= creationTime + 10 days) {... */\n    tag_57:\n        /* \"Solidity Patterns/State_Machine.sol\":986:1003  Stages.RevealBids */\n      0x1\n        /* \"Solidity Patterns/State_Machine.sol\":426:432  _stage */\n      dup1\n        /* \"Solidity Patterns/State_Machine.sol\":417:432  stage == _stage */\n      0x3\n      dup2\n      gt\n      iszero\n      tag_60\n      jumpi\n      invalid\n    tag_60:\n        /* \"Solidity Patterns/State_Machine.sol\":417:422  stage */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Solidity Patterns/State_Machine.sol\":417:432  stage == _stage */\n      0x3\n      dup2\n      gt\n      iszero\n      tag_61\n      jumpi\n      invalid\n    tag_61:\n      eq\n        /* \"Solidity Patterns/State_Machine.sol\":409:433  require(stage == _stage) */\n      iszero\n      iszero\n      tag_62\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_62:\n        /* \"Solidity Patterns/State_Machine.sol\":794:795  _ */\n      pop\n        /* \"Solidity Patterns/State_Machine.sol\":936:1053  function reveal() public timedTransitions atStage(Stages.RevealBids) {... */\n      jump\t// out\n        /* \"Solidity Patterns/State_Machine.sol\":276:323  Stages public stage = Stages.AcceptingBlindBids */\n    tag_18:\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"Solidity Patterns/State_Machine.sol\":330:360  uint public creationTime = now */\n    tag_22:\n      sload(0x1)\n      dup2\n      jump\t// out\n        /* \"Solidity Patterns/State_Machine.sol\":1059:1205  function claimGoods() public timedTransitions atStage(Stages.WinnerDetermined) transitionAfter {... */\n    tag_25:\n        /* \"Solidity Patterns/State_Machine.sol\":580:605  Stages.AcceptingBlindBids */\n      0x0\n        /* \"Solidity Patterns/State_Machine.sol\":571:605  stage == Stages.AcceptingBlindBids */\n      0x3\n      dup2\n      gt\n      iszero\n      tag_65\n      jumpi\n      invalid\n    tag_65:\n        /* \"Solidity Patterns/State_Machine.sol\":571:576  stage */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Solidity Patterns/State_Machine.sol\":571:605  stage == Stages.AcceptingBlindBids */\n      0x3\n      dup2\n      gt\n      iszero\n      tag_66\n      jumpi\n      invalid\n    tag_66:\n      eq\n        /* \"Solidity Patterns/State_Machine.sol\":571:637  stage == Stages.AcceptingBlindBids && now >= creationTime + 6 days */\n      dup1\n      iszero\n      tag_67\n      jumpi\n      pop\n        /* \"Solidity Patterns/State_Machine.sol\":631:637  6 days */\n      0x7e900\n        /* \"Solidity Patterns/State_Machine.sol\":616:628  creationTime */\n      sload(0x1)\n        /* \"Solidity Patterns/State_Machine.sol\":616:637  creationTime + 6 days */\n      add\n        /* \"Solidity Patterns/State_Machine.sol\":609:612  now */\n      timestamp\n        /* \"Solidity Patterns/State_Machine.sol\":609:637  now >= creationTime + 6 days */\n      lt\n      iszero\n        /* \"Solidity Patterns/State_Machine.sol\":571:637  stage == Stages.AcceptingBlindBids && now >= creationTime + 6 days */\n    tag_67:\n        /* \"Solidity Patterns/State_Machine.sol\":567:675  if (stage == Stages.AcceptingBlindBids && now >= creationTime + 6 days) {... */\n      iszero\n      tag_68\n      jumpi\n        /* \"Solidity Patterns/State_Machine.sol\":653:664  nextStage() */\n      tag_69\n        /* \"Solidity Patterns/State_Machine.sol\":653:662  nextStage */\n      tag_32\n        /* \"Solidity Patterns/State_Machine.sol\":653:664  nextStage() */\n      jump\t// in\n    tag_69:\n        /* \"Solidity Patterns/State_Machine.sol\":567:675  if (stage == Stages.AcceptingBlindBids && now >= creationTime + 6 days) {... */\n    tag_68:\n        /* \"Solidity Patterns/State_Machine.sol\":697:714  Stages.RevealBids */\n      0x1\n        /* \"Solidity Patterns/State_Machine.sol\":688:714  stage == Stages.RevealBids */\n      0x3\n      dup2\n      gt\n      iszero\n      tag_70\n      jumpi\n      invalid\n    tag_70:\n        /* \"Solidity Patterns/State_Machine.sol\":688:693  stage */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Solidity Patterns/State_Machine.sol\":688:714  stage == Stages.RevealBids */\n      0x3\n      dup2\n      gt\n      iszero\n      tag_71\n      jumpi\n      invalid\n    tag_71:\n      eq\n        /* \"Solidity Patterns/State_Machine.sol\":688:747  stage == Stages.RevealBids && now >= creationTime + 10 days */\n      dup1\n      iszero\n      tag_72\n      jumpi\n      pop\n        /* \"Solidity Patterns/State_Machine.sol\":740:747  10 days */\n      0xd2f00\n        /* \"Solidity Patterns/State_Machine.sol\":725:737  creationTime */\n      sload(0x1)\n        /* \"Solidity Patterns/State_Machine.sol\":725:747  creationTime + 10 days */\n      add\n        /* \"Solidity Patterns/State_Machine.sol\":718:721  now */\n      timestamp\n        /* \"Solidity Patterns/State_Machine.sol\":718:747  now >= creationTime + 10 days */\n      lt\n      iszero\n        /* \"Solidity Patterns/State_Machine.sol\":688:747  stage == Stages.RevealBids && now >= creationTime + 10 days */\n    tag_72:\n        /* \"Solidity Patterns/State_Machine.sol\":684:785  if (stage == Stages.RevealBids && now >= creationTime + 10 days) {... */\n      iszero\n      tag_73\n      jumpi\n        /* \"Solidity Patterns/State_Machine.sol\":763:774  nextStage() */\n      tag_74\n        /* \"Solidity Patterns/State_Machine.sol\":763:772  nextStage */\n      tag_32\n        /* \"Solidity Patterns/State_Machine.sol\":763:774  nextStage() */\n      jump\t// in\n    tag_74:\n        /* \"Solidity Patterns/State_Machine.sol\":684:785  if (stage == Stages.RevealBids && now >= creationTime + 10 days) {... */\n    tag_73:\n        /* \"Solidity Patterns/State_Machine.sol\":1113:1136  Stages.WinnerDetermined */\n      0x2\n        /* \"Solidity Patterns/State_Machine.sol\":426:432  _stage */\n      dup1\n        /* \"Solidity Patterns/State_Machine.sol\":417:432  stage == _stage */\n      0x3\n      dup2\n      gt\n      iszero\n      tag_76\n      jumpi\n      invalid\n    tag_76:\n        /* \"Solidity Patterns/State_Machine.sol\":417:422  stage */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Solidity Patterns/State_Machine.sol\":417:432  stage == _stage */\n      0x3\n      dup2\n      gt\n      iszero\n      tag_77\n      jumpi\n      invalid\n    tag_77:\n      eq\n        /* \"Solidity Patterns/State_Machine.sol\":409:433  require(stage == _stage) */\n      iszero\n      iszero\n      tag_78\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_78:\n        /* \"Solidity Patterns/State_Machine.sol\":505:516  nextStage() */\n      tag_81\n        /* \"Solidity Patterns/State_Machine.sol\":505:514  nextStage */\n      tag_32\n        /* \"Solidity Patterns/State_Machine.sol\":505:516  nextStage() */\n      jump\t// in\n    tag_81:\n        /* \"Solidity Patterns/State_Machine.sol\":794:795  _ */\n      pop\n        /* \"Solidity Patterns/State_Machine.sol\":1059:1205  function claimGoods() public timedTransitions atStage(Stages.WinnerDetermined) transitionAfter {... */\n      jump\t// out\n        /* \"Solidity Patterns/State_Machine.sol\":1320:1398  function nextStage() internal {... */\n    tag_32:\n        /* \"Solidity Patterns/State_Machine.sol\":1389:1390  1 */\n      0x1\n        /* \"Solidity Patterns/State_Machine.sol\":1380:1385  stage */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Solidity Patterns/State_Machine.sol\":1375:1386  uint(stage) */\n      0x3\n      dup2\n      gt\n      iszero\n      tag_83\n      jumpi\n      invalid\n    tag_83:\n        /* \"Solidity Patterns/State_Machine.sol\":1375:1390  uint(stage) + 1 */\n      add\n        /* \"Solidity Patterns/State_Machine.sol\":1368:1391  Stages(uint(stage) + 1) */\n      0x3\n      dup2\n      gt\n      iszero\n      tag_84\n      jumpi\n      invalid\n    tag_84:\n        /* \"Solidity Patterns/State_Machine.sol\":1360:1365  stage */\n      0x0\n      dup1\n        /* \"Solidity Patterns/State_Machine.sol\":1360:1391  stage = Stages(uint(stage) + 1) */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x3\n      dup2\n      gt\n      iszero\n      tag_85\n      jumpi\n      invalid\n    tag_85:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Solidity Patterns/State_Machine.sol\":1320:1398  function nextStage() internal {... */\n      jump\t// out\n\n    auxdata: 0xa165627a7a72305820aedb9968d972fd7f73e5f54d8697158bcd7ed307a9df988df00984365894a0560029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405260008060006101000a81548160ff0219169083600381111561002257fe5b02179055504260015534801561003757600080fd5b50610459806100476000396000f300608060405260043610610078576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680631998aeef1461007d5780633cecd71914610087578063a475b5dd1461009e578063c040e6b8146100b5578063d8270dce146100ee578063ec29b40514610119575b600080fd5b610085610130565b005b34801561009357600080fd5b5061009c6101f9565b005b3480156100aa57600080fd5b506100b3610230565b005b3480156100c157600080fd5b506100ca6102f9565b604051808260038111156100da57fe5b60ff16815260200191505060405180910390f35b3480156100fa57600080fd5b5061010361030b565b6040518082815260200191505060405180910390f35b34801561012557600080fd5b5061012e610311565b005b6000600381111561013d57fe5b6000809054906101000a900460ff16600381111561015757fe5b14801561016b57506207e900600154014210155b15610179576101786103e2565b5b6001600381111561018657fe5b6000809054906101000a900460ff1660038111156101a057fe5b1480156101b45750620d2f00600154014210155b156101c2576101c16103e2565b5b60008060038111156101d057fe5b6000809054906101000a900460ff1660038111156101ea57fe5b1415156101f657600080fd5b50565b600380600381111561020757fe5b6000809054906101000a900460ff16600381111561022157fe5b14151561022d57600080fd5b50565b6000600381111561023d57fe5b6000809054906101000a900460ff16600381111561025757fe5b14801561026b57506207e900600154014210155b15610279576102786103e2565b5b6001600381111561028657fe5b6000809054906101000a900460ff1660038111156102a057fe5b1480156102b45750620d2f00600154014210155b156102c2576102c16103e2565b5b60018060038111156102d057fe5b6000809054906101000a900460ff1660038111156102ea57fe5b1415156102f657600080fd5b50565b6000809054906101000a900460ff1681565b60015481565b6000600381111561031e57fe5b6000809054906101000a900460ff16600381111561033857fe5b14801561034c57506207e900600154014210155b1561035a576103596103e2565b5b6001600381111561036757fe5b6000809054906101000a900460ff16600381111561038157fe5b1480156103955750620d2f00600154014210155b156103a3576103a26103e2565b5b60028060038111156103b157fe5b6000809054906101000a900460ff1660038111156103cb57fe5b1415156103d757600080fd5b6103df6103e2565b50565b60016000809054906101000a900460ff1660038111156103fe57fe5b01600381111561040a57fe5b6000806101000a81548160ff0219169083600381111561042657fe5b02179055505600a165627a7a72305820aedb9968d972fd7f73e5f54d8697158bcd7ed307a9df988df00984365894a0560029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x22 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0x1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x459 DUP1 PUSH2 0x47 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x78 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x1998AEEF EQ PUSH2 0x7D JUMPI DUP1 PUSH4 0x3CECD719 EQ PUSH2 0x87 JUMPI DUP1 PUSH4 0xA475B5DD EQ PUSH2 0x9E JUMPI DUP1 PUSH4 0xC040E6B8 EQ PUSH2 0xB5 JUMPI DUP1 PUSH4 0xD8270DCE EQ PUSH2 0xEE JUMPI DUP1 PUSH4 0xEC29B405 EQ PUSH2 0x119 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x85 PUSH2 0x130 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x93 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9C PUSH2 0x1F9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB3 PUSH2 0x230 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xCA PUSH2 0x2F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xDA JUMPI INVALID JUMPDEST PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xFA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x103 PUSH2 0x30B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x125 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12E PUSH2 0x311 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x13D JUMPI INVALID JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x157 JUMPI INVALID JUMPDEST EQ DUP1 ISZERO PUSH2 0x16B JUMPI POP PUSH3 0x7E900 PUSH1 0x1 SLOAD ADD TIMESTAMP LT ISZERO JUMPDEST ISZERO PUSH2 0x179 JUMPI PUSH2 0x178 PUSH2 0x3E2 JUMP JUMPDEST JUMPDEST PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x186 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1A0 JUMPI INVALID JUMPDEST EQ DUP1 ISZERO PUSH2 0x1B4 JUMPI POP PUSH3 0xD2F00 PUSH1 0x1 SLOAD ADD TIMESTAMP LT ISZERO JUMPDEST ISZERO PUSH2 0x1C2 JUMPI PUSH2 0x1C1 PUSH2 0x3E2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1D0 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1EA JUMPI INVALID JUMPDEST EQ ISZERO ISZERO PUSH2 0x1F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x3 DUP1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x207 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x221 JUMPI INVALID JUMPDEST EQ ISZERO ISZERO PUSH2 0x22D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x23D JUMPI INVALID JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x257 JUMPI INVALID JUMPDEST EQ DUP1 ISZERO PUSH2 0x26B JUMPI POP PUSH3 0x7E900 PUSH1 0x1 SLOAD ADD TIMESTAMP LT ISZERO JUMPDEST ISZERO PUSH2 0x279 JUMPI PUSH2 0x278 PUSH2 0x3E2 JUMP JUMPDEST JUMPDEST PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x286 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2A0 JUMPI INVALID JUMPDEST EQ DUP1 ISZERO PUSH2 0x2B4 JUMPI POP PUSH3 0xD2F00 PUSH1 0x1 SLOAD ADD TIMESTAMP LT ISZERO JUMPDEST ISZERO PUSH2 0x2C2 JUMPI PUSH2 0x2C1 PUSH2 0x3E2 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2D0 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2EA JUMPI INVALID JUMPDEST EQ ISZERO ISZERO PUSH2 0x2F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x31E JUMPI INVALID JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x338 JUMPI INVALID JUMPDEST EQ DUP1 ISZERO PUSH2 0x34C JUMPI POP PUSH3 0x7E900 PUSH1 0x1 SLOAD ADD TIMESTAMP LT ISZERO JUMPDEST ISZERO PUSH2 0x35A JUMPI PUSH2 0x359 PUSH2 0x3E2 JUMP JUMPDEST JUMPDEST PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x367 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x381 JUMPI INVALID JUMPDEST EQ DUP1 ISZERO PUSH2 0x395 JUMPI POP PUSH3 0xD2F00 PUSH1 0x1 SLOAD ADD TIMESTAMP LT ISZERO JUMPDEST ISZERO PUSH2 0x3A3 JUMPI PUSH2 0x3A2 PUSH2 0x3E2 JUMP JUMPDEST JUMPDEST PUSH1 0x2 DUP1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x3B1 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x3CB JUMPI INVALID JUMPDEST EQ ISZERO ISZERO PUSH2 0x3D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3DF PUSH2 0x3E2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x3FE JUMPI INVALID JUMPDEST ADD PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x40A JUMPI INVALID JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x426 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xae 0xdb SWAP10 PUSH9 0xD972FD7F73E5F54D86 SWAP8 ISZERO DUP12 0xcd PUSH31 0xD307A9DF988DF00984365894A0560029000000000000000000000000000000 ",
							"sourceMap": "131:1269:0:-;;;298:25;276:47;;;;;;;;;;;;;;;;;;;;;;;;;;357:3;330:30;;131:1269;8:9:-1;5:2;;;30:1;27;20:12;5:2;131:1269:0;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405260043610610078576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680631998aeef1461007d5780633cecd71914610087578063a475b5dd1461009e578063c040e6b8146100b5578063d8270dce146100ee578063ec29b40514610119575b600080fd5b610085610130565b005b34801561009357600080fd5b5061009c6101f9565b005b3480156100aa57600080fd5b506100b3610230565b005b3480156100c157600080fd5b506100ca6102f9565b604051808260038111156100da57fe5b60ff16815260200191505060405180910390f35b3480156100fa57600080fd5b5061010361030b565b6040518082815260200191505060405180910390f35b34801561012557600080fd5b5061012e610311565b005b6000600381111561013d57fe5b6000809054906101000a900460ff16600381111561015757fe5b14801561016b57506207e900600154014210155b15610179576101786103e2565b5b6001600381111561018657fe5b6000809054906101000a900460ff1660038111156101a057fe5b1480156101b45750620d2f00600154014210155b156101c2576101c16103e2565b5b60008060038111156101d057fe5b6000809054906101000a900460ff1660038111156101ea57fe5b1415156101f657600080fd5b50565b600380600381111561020757fe5b6000809054906101000a900460ff16600381111561022157fe5b14151561022d57600080fd5b50565b6000600381111561023d57fe5b6000809054906101000a900460ff16600381111561025757fe5b14801561026b57506207e900600154014210155b15610279576102786103e2565b5b6001600381111561028657fe5b6000809054906101000a900460ff1660038111156102a057fe5b1480156102b45750620d2f00600154014210155b156102c2576102c16103e2565b5b60018060038111156102d057fe5b6000809054906101000a900460ff1660038111156102ea57fe5b1415156102f657600080fd5b50565b6000809054906101000a900460ff1681565b60015481565b6000600381111561031e57fe5b6000809054906101000a900460ff16600381111561033857fe5b14801561034c57506207e900600154014210155b1561035a576103596103e2565b5b6001600381111561036757fe5b6000809054906101000a900460ff16600381111561038157fe5b1480156103955750620d2f00600154014210155b156103a3576103a26103e2565b5b60028060038111156103b157fe5b6000809054906101000a900460ff1660038111156103cb57fe5b1415156103d757600080fd5b6103df6103e2565b50565b60016000809054906101000a900460ff1660038111156103fe57fe5b01600381111561040a57fe5b6000806101000a81548160ff0219169083600381111561042657fe5b02179055505600a165627a7a72305820aedb9968d972fd7f73e5f54d8697158bcd7ed307a9df988df00984365894a0560029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x78 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x1998AEEF EQ PUSH2 0x7D JUMPI DUP1 PUSH4 0x3CECD719 EQ PUSH2 0x87 JUMPI DUP1 PUSH4 0xA475B5DD EQ PUSH2 0x9E JUMPI DUP1 PUSH4 0xC040E6B8 EQ PUSH2 0xB5 JUMPI DUP1 PUSH4 0xD8270DCE EQ PUSH2 0xEE JUMPI DUP1 PUSH4 0xEC29B405 EQ PUSH2 0x119 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x85 PUSH2 0x130 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x93 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9C PUSH2 0x1F9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB3 PUSH2 0x230 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xCA PUSH2 0x2F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xDA JUMPI INVALID JUMPDEST PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xFA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x103 PUSH2 0x30B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x125 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12E PUSH2 0x311 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x13D JUMPI INVALID JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x157 JUMPI INVALID JUMPDEST EQ DUP1 ISZERO PUSH2 0x16B JUMPI POP PUSH3 0x7E900 PUSH1 0x1 SLOAD ADD TIMESTAMP LT ISZERO JUMPDEST ISZERO PUSH2 0x179 JUMPI PUSH2 0x178 PUSH2 0x3E2 JUMP JUMPDEST JUMPDEST PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x186 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1A0 JUMPI INVALID JUMPDEST EQ DUP1 ISZERO PUSH2 0x1B4 JUMPI POP PUSH3 0xD2F00 PUSH1 0x1 SLOAD ADD TIMESTAMP LT ISZERO JUMPDEST ISZERO PUSH2 0x1C2 JUMPI PUSH2 0x1C1 PUSH2 0x3E2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1D0 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1EA JUMPI INVALID JUMPDEST EQ ISZERO ISZERO PUSH2 0x1F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x3 DUP1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x207 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x221 JUMPI INVALID JUMPDEST EQ ISZERO ISZERO PUSH2 0x22D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x23D JUMPI INVALID JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x257 JUMPI INVALID JUMPDEST EQ DUP1 ISZERO PUSH2 0x26B JUMPI POP PUSH3 0x7E900 PUSH1 0x1 SLOAD ADD TIMESTAMP LT ISZERO JUMPDEST ISZERO PUSH2 0x279 JUMPI PUSH2 0x278 PUSH2 0x3E2 JUMP JUMPDEST JUMPDEST PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x286 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2A0 JUMPI INVALID JUMPDEST EQ DUP1 ISZERO PUSH2 0x2B4 JUMPI POP PUSH3 0xD2F00 PUSH1 0x1 SLOAD ADD TIMESTAMP LT ISZERO JUMPDEST ISZERO PUSH2 0x2C2 JUMPI PUSH2 0x2C1 PUSH2 0x3E2 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2D0 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2EA JUMPI INVALID JUMPDEST EQ ISZERO ISZERO PUSH2 0x2F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x31E JUMPI INVALID JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x338 JUMPI INVALID JUMPDEST EQ DUP1 ISZERO PUSH2 0x34C JUMPI POP PUSH3 0x7E900 PUSH1 0x1 SLOAD ADD TIMESTAMP LT ISZERO JUMPDEST ISZERO PUSH2 0x35A JUMPI PUSH2 0x359 PUSH2 0x3E2 JUMP JUMPDEST JUMPDEST PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x367 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x381 JUMPI INVALID JUMPDEST EQ DUP1 ISZERO PUSH2 0x395 JUMPI POP PUSH3 0xD2F00 PUSH1 0x1 SLOAD ADD TIMESTAMP LT ISZERO JUMPDEST ISZERO PUSH2 0x3A3 JUMPI PUSH2 0x3A2 PUSH2 0x3E2 JUMP JUMPDEST JUMPDEST PUSH1 0x2 DUP1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x3B1 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x3CB JUMPI INVALID JUMPDEST EQ ISZERO ISZERO PUSH2 0x3D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3DF PUSH2 0x3E2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x3FE JUMPI INVALID JUMPDEST ADD PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x40A JUMPI INVALID JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x426 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xae 0xdb SWAP10 PUSH9 0xD972FD7F73E5F54D86 SWAP8 ISZERO DUP12 0xcd PUSH31 0xD307A9DF988DF00984365894A0560029000000000000000000000000000000 ",
							"sourceMap": "131:1269:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;808:122;;;;;;1211:103;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1211:103:0;;;;;;936:117;;8:9:-1;5:2;;;30:1;27;20:12;5:2;936:117:0;;;;;;276:47;;8:9:-1;5:2;;;30:1;27;20:12;5:2;276:47:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;330:30;;8:9:-1;5:2;;;30:1;27;20:12;5:2;330:30:0;;;;;;;;;;;;;;;;;;;;;;;1059:146;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1059:146:0;;;;;;808:122;580:25;571:34;;;;;;;;:5;;;;;;;;;;;:34;;;;;;;;;:66;;;;;631:6;616:12;;:21;609:3;:28;;571:66;567:108;;;653:11;:9;:11::i;:::-;567:108;697:17;688:26;;;;;;;;:5;;;;;;;;;;;:26;;;;;;;;;:59;;;;;740:7;725:12;;:22;718:3;:29;;688:59;684:101;;;763:11;:9;:11::i;:::-;684:101;863:25;426:6;417:15;;;;;;;;:5;;;;;;;;;;;:15;;;;;;;;;409:24;;;;;;;;794:1;808:122::o;1211:103::-;1245:15;426:6;417:15;;;;;;;;:5;;;;;;;;;;;:15;;;;;;;;;409:24;;;;;;;;1211:103;:::o;936:117::-;580:25;571:34;;;;;;;;:5;;;;;;;;;;;:34;;;;;;;;;:66;;;;;631:6;616:12;;:21;609:3;:28;;571:66;567:108;;;653:11;:9;:11::i;:::-;567:108;697:17;688:26;;;;;;;;:5;;;;;;;;;;;:26;;;;;;;;;:59;;;;;740:7;725:12;;:22;718:3;:29;;688:59;684:101;;;763:11;:9;:11::i;:::-;684:101;986:17;426:6;417:15;;;;;;;;:5;;;;;;;;;;;:15;;;;;;;;;409:24;;;;;;;;794:1;936:117::o;276:47::-;;;;;;;;;;;;;:::o;330:30::-;;;;:::o;1059:146::-;580:25;571:34;;;;;;;;:5;;;;;;;;;;;:34;;;;;;;;;:66;;;;;631:6;616:12;;:21;609:3;:28;;571:66;567:108;;;653:11;:9;:11::i;:::-;567:108;697:17;688:26;;;;;;;;:5;;;;;;;;;;;:26;;;;;;;;;:59;;;;;740:7;725:12;;:22;718:3;:29;;688:59;684:101;;;763:11;:9;:11::i;:::-;684:101;1113:23;426:6;417:15;;;;;;;;:5;;;;;;;;;;;:15;;;;;;;;;409:24;;;;;;;;505:11;:9;:11::i;:::-;794:1;1059:146::o;1320:78::-;1389:1;1380:5;;;;;;;;;;;1375:11;;;;;;;;:15;1368:23;;;;;;;;1360:5;;:31;;;;;;;;;;;;;;;;;;;;;;;;1320:78::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "222600",
								"executionCost": "40555",
								"totalCost": "263155"
							},
							"external": {
								"bid()": "infinite",
								"claimGoods()": "infinite",
								"cleanup()": "477",
								"creationTime()": "482",
								"reveal()": "infinite",
								"stage()": "528"
							},
							"internal": {
								"nextStage()": "20590"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 131,
									"end": 1400,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 131,
									"end": 1400,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 131,
									"end": 1400,
									"name": "MSTORE"
								},
								{
									"begin": 298,
									"end": 323,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 276,
									"end": 323,
									"name": "DUP1"
								},
								{
									"begin": 276,
									"end": 323,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 276,
									"end": 323,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 276,
									"end": 323,
									"name": "EXP"
								},
								{
									"begin": 276,
									"end": 323,
									"name": "DUP2"
								},
								{
									"begin": 276,
									"end": 323,
									"name": "SLOAD"
								},
								{
									"begin": 276,
									"end": 323,
									"name": "DUP2"
								},
								{
									"begin": 276,
									"end": 323,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 276,
									"end": 323,
									"name": "MUL"
								},
								{
									"begin": 276,
									"end": 323,
									"name": "NOT"
								},
								{
									"begin": 276,
									"end": 323,
									"name": "AND"
								},
								{
									"begin": 276,
									"end": 323,
									"name": "SWAP1"
								},
								{
									"begin": 276,
									"end": 323,
									"name": "DUP4"
								},
								{
									"begin": 276,
									"end": 323,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 276,
									"end": 323,
									"name": "DUP2"
								},
								{
									"begin": 276,
									"end": 323,
									"name": "GT"
								},
								{
									"begin": 276,
									"end": 323,
									"name": "ISZERO"
								},
								{
									"begin": 276,
									"end": 323,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 276,
									"end": 323,
									"name": "JUMPI"
								},
								{
									"begin": 276,
									"end": 323,
									"name": "INVALID"
								},
								{
									"begin": 276,
									"end": 323,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 276,
									"end": 323,
									"name": "JUMPDEST"
								},
								{
									"begin": 276,
									"end": 323,
									"name": "MUL"
								},
								{
									"begin": 276,
									"end": 323,
									"name": "OR"
								},
								{
									"begin": 276,
									"end": 323,
									"name": "SWAP1"
								},
								{
									"begin": 276,
									"end": 323,
									"name": "SSTORE"
								},
								{
									"begin": 276,
									"end": 323,
									"name": "POP"
								},
								{
									"begin": 357,
									"end": 360,
									"name": "TIMESTAMP"
								},
								{
									"begin": 330,
									"end": 360,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 330,
									"end": 360,
									"name": "SSTORE"
								},
								{
									"begin": 131,
									"end": 1400,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "2"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "2"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 131,
									"end": 1400,
									"name": "POP"
								},
								{
									"begin": 131,
									"end": 1400,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 131,
									"end": 1400,
									"name": "DUP1"
								},
								{
									"begin": 131,
									"end": 1400,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 131,
									"end": 1400,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 131,
									"end": 1400,
									"name": "CODECOPY"
								},
								{
									"begin": 131,
									"end": 1400,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 131,
									"end": 1400,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a72305820aedb9968d972fd7f73e5f54d8697158bcd7ed307a9df988df00984365894a0560029",
									".code": [
										{
											"begin": 131,
											"end": 1400,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 131,
											"end": 1400,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 131,
											"end": 1400,
											"name": "MSTORE"
										},
										{
											"begin": 131,
											"end": 1400,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 131,
											"end": 1400,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 131,
											"end": 1400,
											"name": "LT"
										},
										{
											"begin": 131,
											"end": 1400,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 131,
											"end": 1400,
											"name": "JUMPI"
										},
										{
											"begin": 131,
											"end": 1400,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 131,
											"end": 1400,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 131,
											"end": 1400,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 131,
											"end": 1400,
											"name": "SWAP1"
										},
										{
											"begin": 131,
											"end": 1400,
											"name": "DIV"
										},
										{
											"begin": 131,
											"end": 1400,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 131,
											"end": 1400,
											"name": "AND"
										},
										{
											"begin": 131,
											"end": 1400,
											"name": "DUP1"
										},
										{
											"begin": 131,
											"end": 1400,
											"name": "PUSH",
											"value": "1998AEEF"
										},
										{
											"begin": 131,
											"end": 1400,
											"name": "EQ"
										},
										{
											"begin": 131,
											"end": 1400,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 131,
											"end": 1400,
											"name": "JUMPI"
										},
										{
											"begin": 131,
											"end": 1400,
											"name": "DUP1"
										},
										{
											"begin": 131,
											"end": 1400,
											"name": "PUSH",
											"value": "3CECD719"
										},
										{
											"begin": 131,
											"end": 1400,
											"name": "EQ"
										},
										{
											"begin": 131,
											"end": 1400,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 131,
											"end": 1400,
											"name": "JUMPI"
										},
										{
											"begin": 131,
											"end": 1400,
											"name": "DUP1"
										},
										{
											"begin": 131,
											"end": 1400,
											"name": "PUSH",
											"value": "A475B5DD"
										},
										{
											"begin": 131,
											"end": 1400,
											"name": "EQ"
										},
										{
											"begin": 131,
											"end": 1400,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 131,
											"end": 1400,
											"name": "JUMPI"
										},
										{
											"begin": 131,
											"end": 1400,
											"name": "DUP1"
										},
										{
											"begin": 131,
											"end": 1400,
											"name": "PUSH",
											"value": "C040E6B8"
										},
										{
											"begin": 131,
											"end": 1400,
											"name": "EQ"
										},
										{
											"begin": 131,
											"end": 1400,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 131,
											"end": 1400,
											"name": "JUMPI"
										},
										{
											"begin": 131,
											"end": 1400,
											"name": "DUP1"
										},
										{
											"begin": 131,
											"end": 1400,
											"name": "PUSH",
											"value": "D8270DCE"
										},
										{
											"begin": 131,
											"end": 1400,
											"name": "EQ"
										},
										{
											"begin": 131,
											"end": 1400,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 131,
											"end": 1400,
											"name": "JUMPI"
										},
										{
											"begin": 131,
											"end": 1400,
											"name": "DUP1"
										},
										{
											"begin": 131,
											"end": 1400,
											"name": "PUSH",
											"value": "EC29B405"
										},
										{
											"begin": 131,
											"end": 1400,
											"name": "EQ"
										},
										{
											"begin": 131,
											"end": 1400,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 131,
											"end": 1400,
											"name": "JUMPI"
										},
										{
											"begin": 131,
											"end": 1400,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 131,
											"end": 1400,
											"name": "JUMPDEST"
										},
										{
											"begin": 131,
											"end": 1400,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 131,
											"end": 1400,
											"name": "DUP1"
										},
										{
											"begin": 131,
											"end": 1400,
											"name": "REVERT"
										},
										{
											"begin": 808,
											"end": 930,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 808,
											"end": 930,
											"name": "JUMPDEST"
										},
										{
											"begin": 808,
											"end": 930,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 808,
											"end": 930,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 808,
											"end": 930,
											"name": "JUMP"
										},
										{
											"begin": 808,
											"end": 930,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 808,
											"end": 930,
											"name": "JUMPDEST"
										},
										{
											"begin": 808,
											"end": 930,
											"name": "STOP"
										},
										{
											"begin": 1211,
											"end": 1314,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 1211,
											"end": 1314,
											"name": "JUMPDEST"
										},
										{
											"begin": 1211,
											"end": 1314,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1211,
											"end": 1314,
											"name": "POP"
										},
										{
											"begin": 1211,
											"end": 1314,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 1211,
											"end": 1314,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 1211,
											"end": 1314,
											"name": "JUMP"
										},
										{
											"begin": 1211,
											"end": 1314,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 1211,
											"end": 1314,
											"name": "JUMPDEST"
										},
										{
											"begin": 1211,
											"end": 1314,
											"name": "STOP"
										},
										{
											"begin": 936,
											"end": 1053,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 936,
											"end": 1053,
											"name": "JUMPDEST"
										},
										{
											"begin": 936,
											"end": 1053,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 936,
											"end": 1053,
											"name": "POP"
										},
										{
											"begin": 936,
											"end": 1053,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 936,
											"end": 1053,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 936,
											"end": 1053,
											"name": "JUMP"
										},
										{
											"begin": 936,
											"end": 1053,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 936,
											"end": 1053,
											"name": "JUMPDEST"
										},
										{
											"begin": 936,
											"end": 1053,
											"name": "STOP"
										},
										{
											"begin": 276,
											"end": 323,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 276,
											"end": 323,
											"name": "JUMPDEST"
										},
										{
											"begin": 276,
											"end": 323,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 276,
											"end": 323,
											"name": "POP"
										},
										{
											"begin": 276,
											"end": 323,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 276,
											"end": 323,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 276,
											"end": 323,
											"name": "JUMP"
										},
										{
											"begin": 276,
											"end": 323,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 276,
											"end": 323,
											"name": "JUMPDEST"
										},
										{
											"begin": 276,
											"end": 323,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 276,
											"end": 323,
											"name": "MLOAD"
										},
										{
											"begin": 276,
											"end": 323,
											"name": "DUP1"
										},
										{
											"begin": 276,
											"end": 323,
											"name": "DUP3"
										},
										{
											"begin": 276,
											"end": 323,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 276,
											"end": 323,
											"name": "DUP2"
										},
										{
											"begin": 276,
											"end": 323,
											"name": "GT"
										},
										{
											"begin": 276,
											"end": 323,
											"name": "ISZERO"
										},
										{
											"begin": 276,
											"end": 323,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 276,
											"end": 323,
											"name": "JUMPI"
										},
										{
											"begin": 276,
											"end": 323,
											"name": "INVALID"
										},
										{
											"begin": 276,
											"end": 323,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 276,
											"end": 323,
											"name": "JUMPDEST"
										},
										{
											"begin": 276,
											"end": 323,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 276,
											"end": 323,
											"name": "AND"
										},
										{
											"begin": 276,
											"end": 323,
											"name": "DUP2"
										},
										{
											"begin": 276,
											"end": 323,
											"name": "MSTORE"
										},
										{
											"begin": 276,
											"end": 323,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 276,
											"end": 323,
											"name": "ADD"
										},
										{
											"begin": 276,
											"end": 323,
											"name": "SWAP2"
										},
										{
											"begin": 276,
											"end": 323,
											"name": "POP"
										},
										{
											"begin": 276,
											"end": 323,
											"name": "POP"
										},
										{
											"begin": 276,
											"end": 323,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 276,
											"end": 323,
											"name": "MLOAD"
										},
										{
											"begin": 276,
											"end": 323,
											"name": "DUP1"
										},
										{
											"begin": 276,
											"end": 323,
											"name": "SWAP2"
										},
										{
											"begin": 276,
											"end": 323,
											"name": "SUB"
										},
										{
											"begin": 276,
											"end": 323,
											"name": "SWAP1"
										},
										{
											"begin": 276,
											"end": 323,
											"name": "RETURN"
										},
										{
											"begin": 330,
											"end": 360,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 330,
											"end": 360,
											"name": "JUMPDEST"
										},
										{
											"begin": 330,
											"end": 360,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 330,
											"end": 360,
											"name": "POP"
										},
										{
											"begin": 330,
											"end": 360,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 330,
											"end": 360,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 330,
											"end": 360,
											"name": "JUMP"
										},
										{
											"begin": 330,
											"end": 360,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 330,
											"end": 360,
											"name": "JUMPDEST"
										},
										{
											"begin": 330,
											"end": 360,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 330,
											"end": 360,
											"name": "MLOAD"
										},
										{
											"begin": 330,
											"end": 360,
											"name": "DUP1"
										},
										{
											"begin": 330,
											"end": 360,
											"name": "DUP3"
										},
										{
											"begin": 330,
											"end": 360,
											"name": "DUP2"
										},
										{
											"begin": 330,
											"end": 360,
											"name": "MSTORE"
										},
										{
											"begin": 330,
											"end": 360,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 330,
											"end": 360,
											"name": "ADD"
										},
										{
											"begin": 330,
											"end": 360,
											"name": "SWAP2"
										},
										{
											"begin": 330,
											"end": 360,
											"name": "POP"
										},
										{
											"begin": 330,
											"end": 360,
											"name": "POP"
										},
										{
											"begin": 330,
											"end": 360,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 330,
											"end": 360,
											"name": "MLOAD"
										},
										{
											"begin": 330,
											"end": 360,
											"name": "DUP1"
										},
										{
											"begin": 330,
											"end": 360,
											"name": "SWAP2"
										},
										{
											"begin": 330,
											"end": 360,
											"name": "SUB"
										},
										{
											"begin": 330,
											"end": 360,
											"name": "SWAP1"
										},
										{
											"begin": 330,
											"end": 360,
											"name": "RETURN"
										},
										{
											"begin": 1059,
											"end": 1205,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 1059,
											"end": 1205,
											"name": "JUMPDEST"
										},
										{
											"begin": 1059,
											"end": 1205,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1059,
											"end": 1205,
											"name": "POP"
										},
										{
											"begin": 1059,
											"end": 1205,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 1059,
											"end": 1205,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 1059,
											"end": 1205,
											"name": "JUMP"
										},
										{
											"begin": 1059,
											"end": 1205,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 1059,
											"end": 1205,
											"name": "JUMPDEST"
										},
										{
											"begin": 1059,
											"end": 1205,
											"name": "STOP"
										},
										{
											"begin": 808,
											"end": 930,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 808,
											"end": 930,
											"name": "JUMPDEST"
										},
										{
											"begin": 580,
											"end": 605,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 571,
											"end": 605,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 571,
											"end": 605,
											"name": "DUP2"
										},
										{
											"begin": 571,
											"end": 605,
											"name": "GT"
										},
										{
											"begin": 571,
											"end": 605,
											"name": "ISZERO"
										},
										{
											"begin": 571,
											"end": 605,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 571,
											"end": 605,
											"name": "JUMPI"
										},
										{
											"begin": 571,
											"end": 605,
											"name": "INVALID"
										},
										{
											"begin": 571,
											"end": 605,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 571,
											"end": 605,
											"name": "JUMPDEST"
										},
										{
											"begin": 571,
											"end": 576,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 571,
											"end": 576,
											"name": "DUP1"
										},
										{
											"begin": 571,
											"end": 576,
											"name": "SWAP1"
										},
										{
											"begin": 571,
											"end": 576,
											"name": "SLOAD"
										},
										{
											"begin": 571,
											"end": 576,
											"name": "SWAP1"
										},
										{
											"begin": 571,
											"end": 576,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 571,
											"end": 576,
											"name": "EXP"
										},
										{
											"begin": 571,
											"end": 576,
											"name": "SWAP1"
										},
										{
											"begin": 571,
											"end": 576,
											"name": "DIV"
										},
										{
											"begin": 571,
											"end": 576,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 571,
											"end": 576,
											"name": "AND"
										},
										{
											"begin": 571,
											"end": 605,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 571,
											"end": 605,
											"name": "DUP2"
										},
										{
											"begin": 571,
											"end": 605,
											"name": "GT"
										},
										{
											"begin": 571,
											"end": 605,
											"name": "ISZERO"
										},
										{
											"begin": 571,
											"end": 605,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 571,
											"end": 605,
											"name": "JUMPI"
										},
										{
											"begin": 571,
											"end": 605,
											"name": "INVALID"
										},
										{
											"begin": 571,
											"end": 605,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 571,
											"end": 605,
											"name": "JUMPDEST"
										},
										{
											"begin": 571,
											"end": 605,
											"name": "EQ"
										},
										{
											"begin": 571,
											"end": 637,
											"name": "DUP1"
										},
										{
											"begin": 571,
											"end": 637,
											"name": "ISZERO"
										},
										{
											"begin": 571,
											"end": 637,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 571,
											"end": 637,
											"name": "JUMPI"
										},
										{
											"begin": 571,
											"end": 637,
											"name": "POP"
										},
										{
											"begin": 631,
											"end": 637,
											"name": "PUSH",
											"value": "7E900"
										},
										{
											"begin": 616,
											"end": 628,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 616,
											"end": 628,
											"name": "SLOAD"
										},
										{
											"begin": 616,
											"end": 637,
											"name": "ADD"
										},
										{
											"begin": 609,
											"end": 612,
											"name": "TIMESTAMP"
										},
										{
											"begin": 609,
											"end": 637,
											"name": "LT"
										},
										{
											"begin": 609,
											"end": 637,
											"name": "ISZERO"
										},
										{
											"begin": 571,
											"end": 637,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 571,
											"end": 637,
											"name": "JUMPDEST"
										},
										{
											"begin": 567,
											"end": 675,
											"name": "ISZERO"
										},
										{
											"begin": 567,
											"end": 675,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 567,
											"end": 675,
											"name": "JUMPI"
										},
										{
											"begin": 653,
											"end": 664,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 653,
											"end": 662,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 653,
											"end": 664,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 653,
											"end": 664,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 653,
											"end": 664,
											"name": "JUMPDEST"
										},
										{
											"begin": 567,
											"end": 675,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 567,
											"end": 675,
											"name": "JUMPDEST"
										},
										{
											"begin": 697,
											"end": 714,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 688,
											"end": 714,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 688,
											"end": 714,
											"name": "DUP2"
										},
										{
											"begin": 688,
											"end": 714,
											"name": "GT"
										},
										{
											"begin": 688,
											"end": 714,
											"name": "ISZERO"
										},
										{
											"begin": 688,
											"end": 714,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 688,
											"end": 714,
											"name": "JUMPI"
										},
										{
											"begin": 688,
											"end": 714,
											"name": "INVALID"
										},
										{
											"begin": 688,
											"end": 714,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 688,
											"end": 714,
											"name": "JUMPDEST"
										},
										{
											"begin": 688,
											"end": 693,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 688,
											"end": 693,
											"name": "DUP1"
										},
										{
											"begin": 688,
											"end": 693,
											"name": "SWAP1"
										},
										{
											"begin": 688,
											"end": 693,
											"name": "SLOAD"
										},
										{
											"begin": 688,
											"end": 693,
											"name": "SWAP1"
										},
										{
											"begin": 688,
											"end": 693,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 688,
											"end": 693,
											"name": "EXP"
										},
										{
											"begin": 688,
											"end": 693,
											"name": "SWAP1"
										},
										{
											"begin": 688,
											"end": 693,
											"name": "DIV"
										},
										{
											"begin": 688,
											"end": 693,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 688,
											"end": 693,
											"name": "AND"
										},
										{
											"begin": 688,
											"end": 714,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 688,
											"end": 714,
											"name": "DUP2"
										},
										{
											"begin": 688,
											"end": 714,
											"name": "GT"
										},
										{
											"begin": 688,
											"end": 714,
											"name": "ISZERO"
										},
										{
											"begin": 688,
											"end": 714,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 688,
											"end": 714,
											"name": "JUMPI"
										},
										{
											"begin": 688,
											"end": 714,
											"name": "INVALID"
										},
										{
											"begin": 688,
											"end": 714,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 688,
											"end": 714,
											"name": "JUMPDEST"
										},
										{
											"begin": 688,
											"end": 714,
											"name": "EQ"
										},
										{
											"begin": 688,
											"end": 747,
											"name": "DUP1"
										},
										{
											"begin": 688,
											"end": 747,
											"name": "ISZERO"
										},
										{
											"begin": 688,
											"end": 747,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 688,
											"end": 747,
											"name": "JUMPI"
										},
										{
											"begin": 688,
											"end": 747,
											"name": "POP"
										},
										{
											"begin": 740,
											"end": 747,
											"name": "PUSH",
											"value": "D2F00"
										},
										{
											"begin": 725,
											"end": 737,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 725,
											"end": 737,
											"name": "SLOAD"
										},
										{
											"begin": 725,
											"end": 747,
											"name": "ADD"
										},
										{
											"begin": 718,
											"end": 721,
											"name": "TIMESTAMP"
										},
										{
											"begin": 718,
											"end": 747,
											"name": "LT"
										},
										{
											"begin": 718,
											"end": 747,
											"name": "ISZERO"
										},
										{
											"begin": 688,
											"end": 747,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 688,
											"end": 747,
											"name": "JUMPDEST"
										},
										{
											"begin": 684,
											"end": 785,
											"name": "ISZERO"
										},
										{
											"begin": 684,
											"end": 785,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 684,
											"end": 785,
											"name": "JUMPI"
										},
										{
											"begin": 763,
											"end": 774,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 763,
											"end": 772,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 763,
											"end": 774,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 763,
											"end": 774,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 763,
											"end": 774,
											"name": "JUMPDEST"
										},
										{
											"begin": 684,
											"end": 785,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 684,
											"end": 785,
											"name": "JUMPDEST"
										},
										{
											"begin": 863,
											"end": 888,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 426,
											"end": 432,
											"name": "DUP1"
										},
										{
											"begin": 417,
											"end": 432,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 417,
											"end": 432,
											"name": "DUP2"
										},
										{
											"begin": 417,
											"end": 432,
											"name": "GT"
										},
										{
											"begin": 417,
											"end": 432,
											"name": "ISZERO"
										},
										{
											"begin": 417,
											"end": 432,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 417,
											"end": 432,
											"name": "JUMPI"
										},
										{
											"begin": 417,
											"end": 432,
											"name": "INVALID"
										},
										{
											"begin": 417,
											"end": 432,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 417,
											"end": 432,
											"name": "JUMPDEST"
										},
										{
											"begin": 417,
											"end": 422,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 417,
											"end": 422,
											"name": "DUP1"
										},
										{
											"begin": 417,
											"end": 422,
											"name": "SWAP1"
										},
										{
											"begin": 417,
											"end": 422,
											"name": "SLOAD"
										},
										{
											"begin": 417,
											"end": 422,
											"name": "SWAP1"
										},
										{
											"begin": 417,
											"end": 422,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 417,
											"end": 422,
											"name": "EXP"
										},
										{
											"begin": 417,
											"end": 422,
											"name": "SWAP1"
										},
										{
											"begin": 417,
											"end": 422,
											"name": "DIV"
										},
										{
											"begin": 417,
											"end": 422,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 417,
											"end": 422,
											"name": "AND"
										},
										{
											"begin": 417,
											"end": 432,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 417,
											"end": 432,
											"name": "DUP2"
										},
										{
											"begin": 417,
											"end": 432,
											"name": "GT"
										},
										{
											"begin": 417,
											"end": 432,
											"name": "ISZERO"
										},
										{
											"begin": 417,
											"end": 432,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 417,
											"end": 432,
											"name": "JUMPI"
										},
										{
											"begin": 417,
											"end": 432,
											"name": "INVALID"
										},
										{
											"begin": 417,
											"end": 432,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 417,
											"end": 432,
											"name": "JUMPDEST"
										},
										{
											"begin": 417,
											"end": 432,
											"name": "EQ"
										},
										{
											"begin": 409,
											"end": 433,
											"name": "ISZERO"
										},
										{
											"begin": 409,
											"end": 433,
											"name": "ISZERO"
										},
										{
											"begin": 409,
											"end": 433,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 409,
											"end": 433,
											"name": "JUMPI"
										},
										{
											"begin": 409,
											"end": 433,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 409,
											"end": 433,
											"name": "DUP1"
										},
										{
											"begin": 409,
											"end": 433,
											"name": "REVERT"
										},
										{
											"begin": 409,
											"end": 433,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 409,
											"end": 433,
											"name": "JUMPDEST"
										},
										{
											"begin": 794,
											"end": 795,
											"name": "POP"
										},
										{
											"begin": 808,
											"end": 930,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1211,
											"end": 1314,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 1211,
											"end": 1314,
											"name": "JUMPDEST"
										},
										{
											"begin": 1245,
											"end": 1260,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 426,
											"end": 432,
											"name": "DUP1"
										},
										{
											"begin": 417,
											"end": 432,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 417,
											"end": 432,
											"name": "DUP2"
										},
										{
											"begin": 417,
											"end": 432,
											"name": "GT"
										},
										{
											"begin": 417,
											"end": 432,
											"name": "ISZERO"
										},
										{
											"begin": 417,
											"end": 432,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 417,
											"end": 432,
											"name": "JUMPI"
										},
										{
											"begin": 417,
											"end": 432,
											"name": "INVALID"
										},
										{
											"begin": 417,
											"end": 432,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 417,
											"end": 432,
											"name": "JUMPDEST"
										},
										{
											"begin": 417,
											"end": 422,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 417,
											"end": 422,
											"name": "DUP1"
										},
										{
											"begin": 417,
											"end": 422,
											"name": "SWAP1"
										},
										{
											"begin": 417,
											"end": 422,
											"name": "SLOAD"
										},
										{
											"begin": 417,
											"end": 422,
											"name": "SWAP1"
										},
										{
											"begin": 417,
											"end": 422,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 417,
											"end": 422,
											"name": "EXP"
										},
										{
											"begin": 417,
											"end": 422,
											"name": "SWAP1"
										},
										{
											"begin": 417,
											"end": 422,
											"name": "DIV"
										},
										{
											"begin": 417,
											"end": 422,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 417,
											"end": 422,
											"name": "AND"
										},
										{
											"begin": 417,
											"end": 432,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 417,
											"end": 432,
											"name": "DUP2"
										},
										{
											"begin": 417,
											"end": 432,
											"name": "GT"
										},
										{
											"begin": 417,
											"end": 432,
											"name": "ISZERO"
										},
										{
											"begin": 417,
											"end": 432,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 417,
											"end": 432,
											"name": "JUMPI"
										},
										{
											"begin": 417,
											"end": 432,
											"name": "INVALID"
										},
										{
											"begin": 417,
											"end": 432,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 417,
											"end": 432,
											"name": "JUMPDEST"
										},
										{
											"begin": 417,
											"end": 432,
											"name": "EQ"
										},
										{
											"begin": 409,
											"end": 433,
											"name": "ISZERO"
										},
										{
											"begin": 409,
											"end": 433,
											"name": "ISZERO"
										},
										{
											"begin": 409,
											"end": 433,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 409,
											"end": 433,
											"name": "JUMPI"
										},
										{
											"begin": 409,
											"end": 433,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 409,
											"end": 433,
											"name": "DUP1"
										},
										{
											"begin": 409,
											"end": 433,
											"name": "REVERT"
										},
										{
											"begin": 409,
											"end": 433,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 409,
											"end": 433,
											"name": "JUMPDEST"
										},
										{
											"begin": 1211,
											"end": 1314,
											"name": "POP"
										},
										{
											"begin": 1211,
											"end": 1314,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 936,
											"end": 1053,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 936,
											"end": 1053,
											"name": "JUMPDEST"
										},
										{
											"begin": 580,
											"end": 605,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 571,
											"end": 605,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 571,
											"end": 605,
											"name": "DUP2"
										},
										{
											"begin": 571,
											"end": 605,
											"name": "GT"
										},
										{
											"begin": 571,
											"end": 605,
											"name": "ISZERO"
										},
										{
											"begin": 571,
											"end": 605,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 571,
											"end": 605,
											"name": "JUMPI"
										},
										{
											"begin": 571,
											"end": 605,
											"name": "INVALID"
										},
										{
											"begin": 571,
											"end": 605,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 571,
											"end": 605,
											"name": "JUMPDEST"
										},
										{
											"begin": 571,
											"end": 576,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 571,
											"end": 576,
											"name": "DUP1"
										},
										{
											"begin": 571,
											"end": 576,
											"name": "SWAP1"
										},
										{
											"begin": 571,
											"end": 576,
											"name": "SLOAD"
										},
										{
											"begin": 571,
											"end": 576,
											"name": "SWAP1"
										},
										{
											"begin": 571,
											"end": 576,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 571,
											"end": 576,
											"name": "EXP"
										},
										{
											"begin": 571,
											"end": 576,
											"name": "SWAP1"
										},
										{
											"begin": 571,
											"end": 576,
											"name": "DIV"
										},
										{
											"begin": 571,
											"end": 576,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 571,
											"end": 576,
											"name": "AND"
										},
										{
											"begin": 571,
											"end": 605,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 571,
											"end": 605,
											"name": "DUP2"
										},
										{
											"begin": 571,
											"end": 605,
											"name": "GT"
										},
										{
											"begin": 571,
											"end": 605,
											"name": "ISZERO"
										},
										{
											"begin": 571,
											"end": 605,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 571,
											"end": 605,
											"name": "JUMPI"
										},
										{
											"begin": 571,
											"end": 605,
											"name": "INVALID"
										},
										{
											"begin": 571,
											"end": 605,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 571,
											"end": 605,
											"name": "JUMPDEST"
										},
										{
											"begin": 571,
											"end": 605,
											"name": "EQ"
										},
										{
											"begin": 571,
											"end": 637,
											"name": "DUP1"
										},
										{
											"begin": 571,
											"end": 637,
											"name": "ISZERO"
										},
										{
											"begin": 571,
											"end": 637,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 571,
											"end": 637,
											"name": "JUMPI"
										},
										{
											"begin": 571,
											"end": 637,
											"name": "POP"
										},
										{
											"begin": 631,
											"end": 637,
											"name": "PUSH",
											"value": "7E900"
										},
										{
											"begin": 616,
											"end": 628,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 616,
											"end": 628,
											"name": "SLOAD"
										},
										{
											"begin": 616,
											"end": 637,
											"name": "ADD"
										},
										{
											"begin": 609,
											"end": 612,
											"name": "TIMESTAMP"
										},
										{
											"begin": 609,
											"end": 637,
											"name": "LT"
										},
										{
											"begin": 609,
											"end": 637,
											"name": "ISZERO"
										},
										{
											"begin": 571,
											"end": 637,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 571,
											"end": 637,
											"name": "JUMPDEST"
										},
										{
											"begin": 567,
											"end": 675,
											"name": "ISZERO"
										},
										{
											"begin": 567,
											"end": 675,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 567,
											"end": 675,
											"name": "JUMPI"
										},
										{
											"begin": 653,
											"end": 664,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 653,
											"end": 662,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 653,
											"end": 664,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 653,
											"end": 664,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 653,
											"end": 664,
											"name": "JUMPDEST"
										},
										{
											"begin": 567,
											"end": 675,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 567,
											"end": 675,
											"name": "JUMPDEST"
										},
										{
											"begin": 697,
											"end": 714,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 688,
											"end": 714,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 688,
											"end": 714,
											"name": "DUP2"
										},
										{
											"begin": 688,
											"end": 714,
											"name": "GT"
										},
										{
											"begin": 688,
											"end": 714,
											"name": "ISZERO"
										},
										{
											"begin": 688,
											"end": 714,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 688,
											"end": 714,
											"name": "JUMPI"
										},
										{
											"begin": 688,
											"end": 714,
											"name": "INVALID"
										},
										{
											"begin": 688,
											"end": 714,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 688,
											"end": 714,
											"name": "JUMPDEST"
										},
										{
											"begin": 688,
											"end": 693,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 688,
											"end": 693,
											"name": "DUP1"
										},
										{
											"begin": 688,
											"end": 693,
											"name": "SWAP1"
										},
										{
											"begin": 688,
											"end": 693,
											"name": "SLOAD"
										},
										{
											"begin": 688,
											"end": 693,
											"name": "SWAP1"
										},
										{
											"begin": 688,
											"end": 693,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 688,
											"end": 693,
											"name": "EXP"
										},
										{
											"begin": 688,
											"end": 693,
											"name": "SWAP1"
										},
										{
											"begin": 688,
											"end": 693,
											"name": "DIV"
										},
										{
											"begin": 688,
											"end": 693,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 688,
											"end": 693,
											"name": "AND"
										},
										{
											"begin": 688,
											"end": 714,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 688,
											"end": 714,
											"name": "DUP2"
										},
										{
											"begin": 688,
											"end": 714,
											"name": "GT"
										},
										{
											"begin": 688,
											"end": 714,
											"name": "ISZERO"
										},
										{
											"begin": 688,
											"end": 714,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 688,
											"end": 714,
											"name": "JUMPI"
										},
										{
											"begin": 688,
											"end": 714,
											"name": "INVALID"
										},
										{
											"begin": 688,
											"end": 714,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 688,
											"end": 714,
											"name": "JUMPDEST"
										},
										{
											"begin": 688,
											"end": 714,
											"name": "EQ"
										},
										{
											"begin": 688,
											"end": 747,
											"name": "DUP1"
										},
										{
											"begin": 688,
											"end": 747,
											"name": "ISZERO"
										},
										{
											"begin": 688,
											"end": 747,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 688,
											"end": 747,
											"name": "JUMPI"
										},
										{
											"begin": 688,
											"end": 747,
											"name": "POP"
										},
										{
											"begin": 740,
											"end": 747,
											"name": "PUSH",
											"value": "D2F00"
										},
										{
											"begin": 725,
											"end": 737,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 725,
											"end": 737,
											"name": "SLOAD"
										},
										{
											"begin": 725,
											"end": 747,
											"name": "ADD"
										},
										{
											"begin": 718,
											"end": 721,
											"name": "TIMESTAMP"
										},
										{
											"begin": 718,
											"end": 747,
											"name": "LT"
										},
										{
											"begin": 718,
											"end": 747,
											"name": "ISZERO"
										},
										{
											"begin": 688,
											"end": 747,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 688,
											"end": 747,
											"name": "JUMPDEST"
										},
										{
											"begin": 684,
											"end": 785,
											"name": "ISZERO"
										},
										{
											"begin": 684,
											"end": 785,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 684,
											"end": 785,
											"name": "JUMPI"
										},
										{
											"begin": 763,
											"end": 774,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 763,
											"end": 772,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 763,
											"end": 774,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 763,
											"end": 774,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 763,
											"end": 774,
											"name": "JUMPDEST"
										},
										{
											"begin": 684,
											"end": 785,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 684,
											"end": 785,
											"name": "JUMPDEST"
										},
										{
											"begin": 986,
											"end": 1003,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 426,
											"end": 432,
											"name": "DUP1"
										},
										{
											"begin": 417,
											"end": 432,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 417,
											"end": 432,
											"name": "DUP2"
										},
										{
											"begin": 417,
											"end": 432,
											"name": "GT"
										},
										{
											"begin": 417,
											"end": 432,
											"name": "ISZERO"
										},
										{
											"begin": 417,
											"end": 432,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 417,
											"end": 432,
											"name": "JUMPI"
										},
										{
											"begin": 417,
											"end": 432,
											"name": "INVALID"
										},
										{
											"begin": 417,
											"end": 432,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 417,
											"end": 432,
											"name": "JUMPDEST"
										},
										{
											"begin": 417,
											"end": 422,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 417,
											"end": 422,
											"name": "DUP1"
										},
										{
											"begin": 417,
											"end": 422,
											"name": "SWAP1"
										},
										{
											"begin": 417,
											"end": 422,
											"name": "SLOAD"
										},
										{
											"begin": 417,
											"end": 422,
											"name": "SWAP1"
										},
										{
											"begin": 417,
											"end": 422,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 417,
											"end": 422,
											"name": "EXP"
										},
										{
											"begin": 417,
											"end": 422,
											"name": "SWAP1"
										},
										{
											"begin": 417,
											"end": 422,
											"name": "DIV"
										},
										{
											"begin": 417,
											"end": 422,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 417,
											"end": 422,
											"name": "AND"
										},
										{
											"begin": 417,
											"end": 432,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 417,
											"end": 432,
											"name": "DUP2"
										},
										{
											"begin": 417,
											"end": 432,
											"name": "GT"
										},
										{
											"begin": 417,
											"end": 432,
											"name": "ISZERO"
										},
										{
											"begin": 417,
											"end": 432,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 417,
											"end": 432,
											"name": "JUMPI"
										},
										{
											"begin": 417,
											"end": 432,
											"name": "INVALID"
										},
										{
											"begin": 417,
											"end": 432,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 417,
											"end": 432,
											"name": "JUMPDEST"
										},
										{
											"begin": 417,
											"end": 432,
											"name": "EQ"
										},
										{
											"begin": 409,
											"end": 433,
											"name": "ISZERO"
										},
										{
											"begin": 409,
											"end": 433,
											"name": "ISZERO"
										},
										{
											"begin": 409,
											"end": 433,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 409,
											"end": 433,
											"name": "JUMPI"
										},
										{
											"begin": 409,
											"end": 433,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 409,
											"end": 433,
											"name": "DUP1"
										},
										{
											"begin": 409,
											"end": 433,
											"name": "REVERT"
										},
										{
											"begin": 409,
											"end": 433,
											"name": "tag",
											"value": "62"
										},
										{
											"begin": 409,
											"end": 433,
											"name": "JUMPDEST"
										},
										{
											"begin": 794,
											"end": 795,
											"name": "POP"
										},
										{
											"begin": 936,
											"end": 1053,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 276,
											"end": 323,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 276,
											"end": 323,
											"name": "JUMPDEST"
										},
										{
											"begin": 276,
											"end": 323,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 276,
											"end": 323,
											"name": "DUP1"
										},
										{
											"begin": 276,
											"end": 323,
											"name": "SWAP1"
										},
										{
											"begin": 276,
											"end": 323,
											"name": "SLOAD"
										},
										{
											"begin": 276,
											"end": 323,
											"name": "SWAP1"
										},
										{
											"begin": 276,
											"end": 323,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 276,
											"end": 323,
											"name": "EXP"
										},
										{
											"begin": 276,
											"end": 323,
											"name": "SWAP1"
										},
										{
											"begin": 276,
											"end": 323,
											"name": "DIV"
										},
										{
											"begin": 276,
											"end": 323,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 276,
											"end": 323,
											"name": "AND"
										},
										{
											"begin": 276,
											"end": 323,
											"name": "DUP2"
										},
										{
											"begin": 276,
											"end": 323,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 330,
											"end": 360,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 330,
											"end": 360,
											"name": "JUMPDEST"
										},
										{
											"begin": 330,
											"end": 360,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 330,
											"end": 360,
											"name": "SLOAD"
										},
										{
											"begin": 330,
											"end": 360,
											"name": "DUP2"
										},
										{
											"begin": 330,
											"end": 360,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1059,
											"end": 1205,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 1059,
											"end": 1205,
											"name": "JUMPDEST"
										},
										{
											"begin": 580,
											"end": 605,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 571,
											"end": 605,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 571,
											"end": 605,
											"name": "DUP2"
										},
										{
											"begin": 571,
											"end": 605,
											"name": "GT"
										},
										{
											"begin": 571,
											"end": 605,
											"name": "ISZERO"
										},
										{
											"begin": 571,
											"end": 605,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 571,
											"end": 605,
											"name": "JUMPI"
										},
										{
											"begin": 571,
											"end": 605,
											"name": "INVALID"
										},
										{
											"begin": 571,
											"end": 605,
											"name": "tag",
											"value": "65"
										},
										{
											"begin": 571,
											"end": 605,
											"name": "JUMPDEST"
										},
										{
											"begin": 571,
											"end": 576,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 571,
											"end": 576,
											"name": "DUP1"
										},
										{
											"begin": 571,
											"end": 576,
											"name": "SWAP1"
										},
										{
											"begin": 571,
											"end": 576,
											"name": "SLOAD"
										},
										{
											"begin": 571,
											"end": 576,
											"name": "SWAP1"
										},
										{
											"begin": 571,
											"end": 576,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 571,
											"end": 576,
											"name": "EXP"
										},
										{
											"begin": 571,
											"end": 576,
											"name": "SWAP1"
										},
										{
											"begin": 571,
											"end": 576,
											"name": "DIV"
										},
										{
											"begin": 571,
											"end": 576,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 571,
											"end": 576,
											"name": "AND"
										},
										{
											"begin": 571,
											"end": 605,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 571,
											"end": 605,
											"name": "DUP2"
										},
										{
											"begin": 571,
											"end": 605,
											"name": "GT"
										},
										{
											"begin": 571,
											"end": 605,
											"name": "ISZERO"
										},
										{
											"begin": 571,
											"end": 605,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 571,
											"end": 605,
											"name": "JUMPI"
										},
										{
											"begin": 571,
											"end": 605,
											"name": "INVALID"
										},
										{
											"begin": 571,
											"end": 605,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 571,
											"end": 605,
											"name": "JUMPDEST"
										},
										{
											"begin": 571,
											"end": 605,
											"name": "EQ"
										},
										{
											"begin": 571,
											"end": 637,
											"name": "DUP1"
										},
										{
											"begin": 571,
											"end": 637,
											"name": "ISZERO"
										},
										{
											"begin": 571,
											"end": 637,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 571,
											"end": 637,
											"name": "JUMPI"
										},
										{
											"begin": 571,
											"end": 637,
											"name": "POP"
										},
										{
											"begin": 631,
											"end": 637,
											"name": "PUSH",
											"value": "7E900"
										},
										{
											"begin": 616,
											"end": 628,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 616,
											"end": 628,
											"name": "SLOAD"
										},
										{
											"begin": 616,
											"end": 637,
											"name": "ADD"
										},
										{
											"begin": 609,
											"end": 612,
											"name": "TIMESTAMP"
										},
										{
											"begin": 609,
											"end": 637,
											"name": "LT"
										},
										{
											"begin": 609,
											"end": 637,
											"name": "ISZERO"
										},
										{
											"begin": 571,
											"end": 637,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 571,
											"end": 637,
											"name": "JUMPDEST"
										},
										{
											"begin": 567,
											"end": 675,
											"name": "ISZERO"
										},
										{
											"begin": 567,
											"end": 675,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 567,
											"end": 675,
											"name": "JUMPI"
										},
										{
											"begin": 653,
											"end": 664,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 653,
											"end": 662,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 653,
											"end": 664,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 653,
											"end": 664,
											"name": "tag",
											"value": "69"
										},
										{
											"begin": 653,
											"end": 664,
											"name": "JUMPDEST"
										},
										{
											"begin": 567,
											"end": 675,
											"name": "tag",
											"value": "68"
										},
										{
											"begin": 567,
											"end": 675,
											"name": "JUMPDEST"
										},
										{
											"begin": 697,
											"end": 714,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 688,
											"end": 714,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 688,
											"end": 714,
											"name": "DUP2"
										},
										{
											"begin": 688,
											"end": 714,
											"name": "GT"
										},
										{
											"begin": 688,
											"end": 714,
											"name": "ISZERO"
										},
										{
											"begin": 688,
											"end": 714,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 688,
											"end": 714,
											"name": "JUMPI"
										},
										{
											"begin": 688,
											"end": 714,
											"name": "INVALID"
										},
										{
											"begin": 688,
											"end": 714,
											"name": "tag",
											"value": "70"
										},
										{
											"begin": 688,
											"end": 714,
											"name": "JUMPDEST"
										},
										{
											"begin": 688,
											"end": 693,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 688,
											"end": 693,
											"name": "DUP1"
										},
										{
											"begin": 688,
											"end": 693,
											"name": "SWAP1"
										},
										{
											"begin": 688,
											"end": 693,
											"name": "SLOAD"
										},
										{
											"begin": 688,
											"end": 693,
											"name": "SWAP1"
										},
										{
											"begin": 688,
											"end": 693,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 688,
											"end": 693,
											"name": "EXP"
										},
										{
											"begin": 688,
											"end": 693,
											"name": "SWAP1"
										},
										{
											"begin": 688,
											"end": 693,
											"name": "DIV"
										},
										{
											"begin": 688,
											"end": 693,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 688,
											"end": 693,
											"name": "AND"
										},
										{
											"begin": 688,
											"end": 714,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 688,
											"end": 714,
											"name": "DUP2"
										},
										{
											"begin": 688,
											"end": 714,
											"name": "GT"
										},
										{
											"begin": 688,
											"end": 714,
											"name": "ISZERO"
										},
										{
											"begin": 688,
											"end": 714,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 688,
											"end": 714,
											"name": "JUMPI"
										},
										{
											"begin": 688,
											"end": 714,
											"name": "INVALID"
										},
										{
											"begin": 688,
											"end": 714,
											"name": "tag",
											"value": "71"
										},
										{
											"begin": 688,
											"end": 714,
											"name": "JUMPDEST"
										},
										{
											"begin": 688,
											"end": 714,
											"name": "EQ"
										},
										{
											"begin": 688,
											"end": 747,
											"name": "DUP1"
										},
										{
											"begin": 688,
											"end": 747,
											"name": "ISZERO"
										},
										{
											"begin": 688,
											"end": 747,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 688,
											"end": 747,
											"name": "JUMPI"
										},
										{
											"begin": 688,
											"end": 747,
											"name": "POP"
										},
										{
											"begin": 740,
											"end": 747,
											"name": "PUSH",
											"value": "D2F00"
										},
										{
											"begin": 725,
											"end": 737,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 725,
											"end": 737,
											"name": "SLOAD"
										},
										{
											"begin": 725,
											"end": 747,
											"name": "ADD"
										},
										{
											"begin": 718,
											"end": 721,
											"name": "TIMESTAMP"
										},
										{
											"begin": 718,
											"end": 747,
											"name": "LT"
										},
										{
											"begin": 718,
											"end": 747,
											"name": "ISZERO"
										},
										{
											"begin": 688,
											"end": 747,
											"name": "tag",
											"value": "72"
										},
										{
											"begin": 688,
											"end": 747,
											"name": "JUMPDEST"
										},
										{
											"begin": 684,
											"end": 785,
											"name": "ISZERO"
										},
										{
											"begin": 684,
											"end": 785,
											"name": "PUSH [tag]",
											"value": "73"
										},
										{
											"begin": 684,
											"end": 785,
											"name": "JUMPI"
										},
										{
											"begin": 763,
											"end": 774,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 763,
											"end": 772,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 763,
											"end": 774,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 763,
											"end": 774,
											"name": "tag",
											"value": "74"
										},
										{
											"begin": 763,
											"end": 774,
											"name": "JUMPDEST"
										},
										{
											"begin": 684,
											"end": 785,
											"name": "tag",
											"value": "73"
										},
										{
											"begin": 684,
											"end": 785,
											"name": "JUMPDEST"
										},
										{
											"begin": 1113,
											"end": 1136,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 426,
											"end": 432,
											"name": "DUP1"
										},
										{
											"begin": 417,
											"end": 432,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 417,
											"end": 432,
											"name": "DUP2"
										},
										{
											"begin": 417,
											"end": 432,
											"name": "GT"
										},
										{
											"begin": 417,
											"end": 432,
											"name": "ISZERO"
										},
										{
											"begin": 417,
											"end": 432,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 417,
											"end": 432,
											"name": "JUMPI"
										},
										{
											"begin": 417,
											"end": 432,
											"name": "INVALID"
										},
										{
											"begin": 417,
											"end": 432,
											"name": "tag",
											"value": "76"
										},
										{
											"begin": 417,
											"end": 432,
											"name": "JUMPDEST"
										},
										{
											"begin": 417,
											"end": 422,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 417,
											"end": 422,
											"name": "DUP1"
										},
										{
											"begin": 417,
											"end": 422,
											"name": "SWAP1"
										},
										{
											"begin": 417,
											"end": 422,
											"name": "SLOAD"
										},
										{
											"begin": 417,
											"end": 422,
											"name": "SWAP1"
										},
										{
											"begin": 417,
											"end": 422,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 417,
											"end": 422,
											"name": "EXP"
										},
										{
											"begin": 417,
											"end": 422,
											"name": "SWAP1"
										},
										{
											"begin": 417,
											"end": 422,
											"name": "DIV"
										},
										{
											"begin": 417,
											"end": 422,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 417,
											"end": 422,
											"name": "AND"
										},
										{
											"begin": 417,
											"end": 432,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 417,
											"end": 432,
											"name": "DUP2"
										},
										{
											"begin": 417,
											"end": 432,
											"name": "GT"
										},
										{
											"begin": 417,
											"end": 432,
											"name": "ISZERO"
										},
										{
											"begin": 417,
											"end": 432,
											"name": "PUSH [tag]",
											"value": "77"
										},
										{
											"begin": 417,
											"end": 432,
											"name": "JUMPI"
										},
										{
											"begin": 417,
											"end": 432,
											"name": "INVALID"
										},
										{
											"begin": 417,
											"end": 432,
											"name": "tag",
											"value": "77"
										},
										{
											"begin": 417,
											"end": 432,
											"name": "JUMPDEST"
										},
										{
											"begin": 417,
											"end": 432,
											"name": "EQ"
										},
										{
											"begin": 409,
											"end": 433,
											"name": "ISZERO"
										},
										{
											"begin": 409,
											"end": 433,
											"name": "ISZERO"
										},
										{
											"begin": 409,
											"end": 433,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 409,
											"end": 433,
											"name": "JUMPI"
										},
										{
											"begin": 409,
											"end": 433,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 409,
											"end": 433,
											"name": "DUP1"
										},
										{
											"begin": 409,
											"end": 433,
											"name": "REVERT"
										},
										{
											"begin": 409,
											"end": 433,
											"name": "tag",
											"value": "78"
										},
										{
											"begin": 409,
											"end": 433,
											"name": "JUMPDEST"
										},
										{
											"begin": 505,
											"end": 516,
											"name": "PUSH [tag]",
											"value": "81"
										},
										{
											"begin": 505,
											"end": 514,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 505,
											"end": 516,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 505,
											"end": 516,
											"name": "tag",
											"value": "81"
										},
										{
											"begin": 505,
											"end": 516,
											"name": "JUMPDEST"
										},
										{
											"begin": 794,
											"end": 795,
											"name": "POP"
										},
										{
											"begin": 1059,
											"end": 1205,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1320,
											"end": 1398,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 1320,
											"end": 1398,
											"name": "JUMPDEST"
										},
										{
											"begin": 1389,
											"end": 1390,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1380,
											"end": 1385,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1380,
											"end": 1385,
											"name": "DUP1"
										},
										{
											"begin": 1380,
											"end": 1385,
											"name": "SWAP1"
										},
										{
											"begin": 1380,
											"end": 1385,
											"name": "SLOAD"
										},
										{
											"begin": 1380,
											"end": 1385,
											"name": "SWAP1"
										},
										{
											"begin": 1380,
											"end": 1385,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1380,
											"end": 1385,
											"name": "EXP"
										},
										{
											"begin": 1380,
											"end": 1385,
											"name": "SWAP1"
										},
										{
											"begin": 1380,
											"end": 1385,
											"name": "DIV"
										},
										{
											"begin": 1380,
											"end": 1385,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1380,
											"end": 1385,
											"name": "AND"
										},
										{
											"begin": 1375,
											"end": 1386,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1375,
											"end": 1386,
											"name": "DUP2"
										},
										{
											"begin": 1375,
											"end": 1386,
											"name": "GT"
										},
										{
											"begin": 1375,
											"end": 1386,
											"name": "ISZERO"
										},
										{
											"begin": 1375,
											"end": 1386,
											"name": "PUSH [tag]",
											"value": "83"
										},
										{
											"begin": 1375,
											"end": 1386,
											"name": "JUMPI"
										},
										{
											"begin": 1375,
											"end": 1386,
											"name": "INVALID"
										},
										{
											"begin": 1375,
											"end": 1386,
											"name": "tag",
											"value": "83"
										},
										{
											"begin": 1375,
											"end": 1386,
											"name": "JUMPDEST"
										},
										{
											"begin": 1375,
											"end": 1390,
											"name": "ADD"
										},
										{
											"begin": 1368,
											"end": 1391,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1368,
											"end": 1391,
											"name": "DUP2"
										},
										{
											"begin": 1368,
											"end": 1391,
											"name": "GT"
										},
										{
											"begin": 1368,
											"end": 1391,
											"name": "ISZERO"
										},
										{
											"begin": 1368,
											"end": 1391,
											"name": "PUSH [tag]",
											"value": "84"
										},
										{
											"begin": 1368,
											"end": 1391,
											"name": "JUMPI"
										},
										{
											"begin": 1368,
											"end": 1391,
											"name": "INVALID"
										},
										{
											"begin": 1368,
											"end": 1391,
											"name": "tag",
											"value": "84"
										},
										{
											"begin": 1368,
											"end": 1391,
											"name": "JUMPDEST"
										},
										{
											"begin": 1360,
											"end": 1365,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1360,
											"end": 1365,
											"name": "DUP1"
										},
										{
											"begin": 1360,
											"end": 1391,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1360,
											"end": 1391,
											"name": "EXP"
										},
										{
											"begin": 1360,
											"end": 1391,
											"name": "DUP2"
										},
										{
											"begin": 1360,
											"end": 1391,
											"name": "SLOAD"
										},
										{
											"begin": 1360,
											"end": 1391,
											"name": "DUP2"
										},
										{
											"begin": 1360,
											"end": 1391,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1360,
											"end": 1391,
											"name": "MUL"
										},
										{
											"begin": 1360,
											"end": 1391,
											"name": "NOT"
										},
										{
											"begin": 1360,
											"end": 1391,
											"name": "AND"
										},
										{
											"begin": 1360,
											"end": 1391,
											"name": "SWAP1"
										},
										{
											"begin": 1360,
											"end": 1391,
											"name": "DUP4"
										},
										{
											"begin": 1360,
											"end": 1391,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1360,
											"end": 1391,
											"name": "DUP2"
										},
										{
											"begin": 1360,
											"end": 1391,
											"name": "GT"
										},
										{
											"begin": 1360,
											"end": 1391,
											"name": "ISZERO"
										},
										{
											"begin": 1360,
											"end": 1391,
											"name": "PUSH [tag]",
											"value": "85"
										},
										{
											"begin": 1360,
											"end": 1391,
											"name": "JUMPI"
										},
										{
											"begin": 1360,
											"end": 1391,
											"name": "INVALID"
										},
										{
											"begin": 1360,
											"end": 1391,
											"name": "tag",
											"value": "85"
										},
										{
											"begin": 1360,
											"end": 1391,
											"name": "JUMPDEST"
										},
										{
											"begin": 1360,
											"end": 1391,
											"name": "MUL"
										},
										{
											"begin": 1360,
											"end": 1391,
											"name": "OR"
										},
										{
											"begin": 1360,
											"end": 1391,
											"name": "SWAP1"
										},
										{
											"begin": 1360,
											"end": 1391,
											"name": "SSTORE"
										},
										{
											"begin": 1360,
											"end": 1391,
											"name": "POP"
										},
										{
											"begin": 1320,
											"end": 1398,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"bid()": "1998aeef",
							"claimGoods()": "ec29b405",
							"cleanup()": "3cecd719",
							"creationTime()": "d8270dce",
							"reveal()": "a475b5dd",
							"stage()": "c040e6b8"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.24+commit.e67f0147\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[],\"name\":\"bid\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"cleanup\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"reveal\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stage\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"creationTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"claimGoods\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"Solidity Patterns/State_Machine.sol\":\"StateMachine\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Solidity Patterns/State_Machine.sol\":{\"keccak256\":\"0x471f9e63cdd7d628f65e39e4599f89855eb7a060c8877be3c2fee8747f995897\",\"urls\":[\"bzzr://270230dcb670ec17acd8e824cbc1ea58064b4c09ccc688841f0661aee05eb2b6\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"formattedMessage": "Solidity Patterns/State_Machine.sol:50:5: Warning: Function state mutability can be restricted to view\n    function cleanup() public atStage(Stages.Finished) {\n    ^ (Relevant source part starts here and spans across multiple lines).\n",
				"message": "Function state mutability can be restricted to view",
				"severity": "warning",
				"sourceLocation": {
					"end": 1314,
					"file": "Solidity Patterns/State_Machine.sol",
					"start": 1211
				},
				"type": "Warning"
			}
		],
		"sources": {
			"Solidity Patterns/State_Machine.sol": {
				"ast": {
					"absolutePath": "Solidity Patterns/State_Machine.sol",
					"exportedSymbols": {
						"StateMachine": [
							121
						]
					},
					"id": 122,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 121,
							"linearizedBaseContracts": [
								121
							],
							"name": "StateMachine",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "StateMachine.Stages",
									"id": 6,
									"members": [
										{
											"id": 2,
											"name": "AcceptingBlindBids",
											"nodeType": "EnumValue",
											"src": "182:18:0"
										},
										{
											"id": 3,
											"name": "RevealBids",
											"nodeType": "EnumValue",
											"src": "210:10:0"
										},
										{
											"id": 4,
											"name": "WinnerDetermined",
											"nodeType": "EnumValue",
											"src": "230:16:0"
										},
										{
											"id": 5,
											"name": "Finished",
											"nodeType": "EnumValue",
											"src": "256:8:0"
										}
									],
									"name": "Stages",
									"nodeType": "EnumDefinition",
									"src": "160:110:0"
								},
								{
									"constant": false,
									"id": 10,
									"name": "stage",
									"nodeType": "VariableDeclaration",
									"scope": 121,
									"src": "276:47:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_enum$_Stages_$6",
										"typeString": "enum StateMachine.Stages"
									},
									"typeName": {
										"contractScope": null,
										"id": 7,
										"name": "Stages",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 6,
										"src": "276:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_enum$_Stages_$6",
											"typeString": "enum StateMachine.Stages"
										}
									},
									"value": {
										"argumentTypes": null,
										"expression": {
											"argumentTypes": null,
											"id": 8,
											"name": "Stages",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 6,
											"src": "298:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_enum$_Stages_$6_$",
												"typeString": "type(enum StateMachine.Stages)"
											}
										},
										"id": 9,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"memberName": "AcceptingBlindBids",
										"nodeType": "MemberAccess",
										"referencedDeclaration": null,
										"src": "298:25:0",
										"typeDescriptions": {
											"typeIdentifier": "t_enum$_Stages_$6",
											"typeString": "enum StateMachine.Stages"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 13,
									"name": "creationTime",
									"nodeType": "VariableDeclaration",
									"scope": 121,
									"src": "330:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 11,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "330:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"id": 12,
										"name": "now",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 138,
										"src": "357:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 24,
										"nodeType": "Block",
										"src": "399:52:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_enum$_Stages_$6",
																"typeString": "enum StateMachine.Stages"
															},
															"id": 20,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 18,
																"name": "stage",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "417:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Stages_$6",
																	"typeString": "enum StateMachine.Stages"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 19,
																"name": "_stage",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 15,
																"src": "426:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Stages_$6",
																	"typeString": "enum StateMachine.Stages"
																}
															},
															"src": "417:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 17,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															139,
															140
														],
														"referencedDeclaration": 139,
														"src": "409:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 21,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "409:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 22,
												"nodeType": "ExpressionStatement",
												"src": "409:24:0"
											},
											{
												"id": 23,
												"nodeType": "PlaceholderStatement",
												"src": "443:1:0"
											}
										]
									},
									"documentation": null,
									"id": 25,
									"name": "atStage",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 15,
												"name": "_stage",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "384:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Stages_$6",
													"typeString": "enum StateMachine.Stages"
												},
												"typeName": {
													"contractScope": null,
													"id": 14,
													"name": "Stages",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 6,
													"src": "384:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Stages_$6",
														"typeString": "enum StateMachine.Stages"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "383:15:0"
									},
									"src": "367:84:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 31,
										"nodeType": "Block",
										"src": "484:39:0",
										"statements": [
											{
												"id": 27,
												"nodeType": "PlaceholderStatement",
												"src": "494:1:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 28,
														"name": "nextStage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 120,
														"src": "505:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 29,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "505:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 30,
												"nodeType": "ExpressionStatement",
												"src": "505:11:0"
											}
										]
									},
									"documentation": null,
									"id": 32,
									"name": "transitionAfter",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "481:2:0"
									},
									"src": "457:66:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 65,
										"nodeType": "Block",
										"src": "557:245:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 43,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_enum$_Stages_$6",
															"typeString": "enum StateMachine.Stages"
														},
														"id": 37,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 34,
															"name": "stage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 10,
															"src": "571:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Stages_$6",
																"typeString": "enum StateMachine.Stages"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 35,
																"name": "Stages",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 6,
																"src": "580:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Stages_$6_$",
																	"typeString": "type(enum StateMachine.Stages)"
																}
															},
															"id": 36,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "AcceptingBlindBids",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "580:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Stages_$6",
																"typeString": "enum StateMachine.Stages"
															}
														},
														"src": "571:34:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 42,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 38,
															"name": "now",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 138,
															"src": "609:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 39,
																"name": "creationTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 13,
																"src": "616:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "36",
																"id": 40,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "631:6:0",
																"subdenomination": "days",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_518400_by_1",
																	"typeString": "int_const 518400"
																},
																"value": "6"
															},
															"src": "616:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "609:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "571:66:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 48,
												"nodeType": "IfStatement",
												"src": "567:108:0",
												"trueBody": {
													"id": 47,
													"nodeType": "Block",
													"src": "639:36:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 44,
																	"name": "nextStage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 120,
																	"src": "653:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 45,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "653:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 46,
															"nodeType": "ExpressionStatement",
															"src": "653:11:0"
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 58,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_enum$_Stages_$6",
															"typeString": "enum StateMachine.Stages"
														},
														"id": 52,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 49,
															"name": "stage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 10,
															"src": "688:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Stages_$6",
																"typeString": "enum StateMachine.Stages"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 50,
																"name": "Stages",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 6,
																"src": "697:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Stages_$6_$",
																	"typeString": "type(enum StateMachine.Stages)"
																}
															},
															"id": 51,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "RevealBids",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "697:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Stages_$6",
																"typeString": "enum StateMachine.Stages"
															}
														},
														"src": "688:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 57,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 53,
															"name": "now",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 138,
															"src": "718:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 54,
																"name": "creationTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 13,
																"src": "725:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "3130",
																"id": 55,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "740:7:0",
																"subdenomination": "days",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_864000_by_1",
																	"typeString": "int_const 864000"
																},
																"value": "10"
															},
															"src": "725:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "718:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "688:59:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 63,
												"nodeType": "IfStatement",
												"src": "684:101:0",
												"trueBody": {
													"id": 62,
													"nodeType": "Block",
													"src": "749:36:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 59,
																	"name": "nextStage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 120,
																	"src": "763:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 60,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "763:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 61,
															"nodeType": "ExpressionStatement",
															"src": "763:11:0"
														}
													]
												}
											},
											{
												"id": 64,
												"nodeType": "PlaceholderStatement",
												"src": "794:1:0"
											}
										]
									},
									"documentation": null,
									"id": 66,
									"name": "timedTransitions",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "554:2:0"
									},
									"src": "529:273:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 75,
										"nodeType": "Block",
										"src": "890:40:0",
										"statements": []
									},
									"documentation": null,
									"id": 76,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": null,
											"id": 69,
											"modifierName": {
												"argumentTypes": null,
												"id": 68,
												"name": "timedTransitions",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 66,
												"src": "838:16:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "838:16:0"
										},
										{
											"arguments": [
												{
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 71,
														"name": "Stages",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 6,
														"src": "863:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_enum$_Stages_$6_$",
															"typeString": "type(enum StateMachine.Stages)"
														}
													},
													"id": 72,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberName": "AcceptingBlindBids",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "863:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Stages_$6",
														"typeString": "enum StateMachine.Stages"
													}
												}
											],
											"id": 73,
											"modifierName": {
												"argumentTypes": null,
												"id": 70,
												"name": "atStage",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 25,
												"src": "855:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_enum$_Stages_$6_$",
													"typeString": "modifier (enum StateMachine.Stages)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "855:34:0"
										}
									],
									"name": "bid",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "820:2:0"
									},
									"payable": true,
									"returnParameters": {
										"id": 74,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "890:0:0"
									},
									"scope": 121,
									"src": "808:122:0",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 85,
										"nodeType": "Block",
										"src": "1005:48:0",
										"statements": []
									},
									"documentation": null,
									"id": 86,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": null,
											"id": 79,
											"modifierName": {
												"argumentTypes": null,
												"id": 78,
												"name": "timedTransitions",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 66,
												"src": "961:16:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "961:16:0"
										},
										{
											"arguments": [
												{
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 81,
														"name": "Stages",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 6,
														"src": "986:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_enum$_Stages_$6_$",
															"typeString": "type(enum StateMachine.Stages)"
														}
													},
													"id": 82,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberName": "RevealBids",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "986:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Stages_$6",
														"typeString": "enum StateMachine.Stages"
													}
												}
											],
											"id": 83,
											"modifierName": {
												"argumentTypes": null,
												"id": 80,
												"name": "atStage",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 25,
												"src": "978:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_enum$_Stages_$6_$",
													"typeString": "modifier (enum StateMachine.Stages)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "978:26:0"
										}
									],
									"name": "reveal",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "951:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1005:0:0"
									},
									"scope": 121,
									"src": "936:117:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "1154:51:0",
										"statements": []
									},
									"documentation": null,
									"id": 98,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": null,
											"id": 89,
											"modifierName": {
												"argumentTypes": null,
												"id": 88,
												"name": "timedTransitions",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 66,
												"src": "1088:16:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1088:16:0"
										},
										{
											"arguments": [
												{
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 91,
														"name": "Stages",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 6,
														"src": "1113:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_enum$_Stages_$6_$",
															"typeString": "type(enum StateMachine.Stages)"
														}
													},
													"id": 92,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberName": "WinnerDetermined",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "1113:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Stages_$6",
														"typeString": "enum StateMachine.Stages"
													}
												}
											],
											"id": 93,
											"modifierName": {
												"argumentTypes": null,
												"id": 90,
												"name": "atStage",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 25,
												"src": "1105:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_enum$_Stages_$6_$",
													"typeString": "modifier (enum StateMachine.Stages)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1105:32:0"
										},
										{
											"arguments": null,
											"id": 95,
											"modifierName": {
												"argumentTypes": null,
												"id": 94,
												"name": "transitionAfter",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 32,
												"src": "1138:15:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1138:15:0"
										}
									],
									"name": "claimGoods",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1078:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1154:0:0"
									},
									"scope": 121,
									"src": "1059:146:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 105,
										"nodeType": "Block",
										"src": "1262:52:0",
										"statements": []
									},
									"documentation": null,
									"id": 106,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [
												{
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 101,
														"name": "Stages",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 6,
														"src": "1245:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_enum$_Stages_$6_$",
															"typeString": "type(enum StateMachine.Stages)"
														}
													},
													"id": 102,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberName": "Finished",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "1245:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Stages_$6",
														"typeString": "enum StateMachine.Stages"
													}
												}
											],
											"id": 103,
											"modifierName": {
												"argumentTypes": null,
												"id": 100,
												"name": "atStage",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 25,
												"src": "1237:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_enum$_Stages_$6_$",
													"typeString": "modifier (enum StateMachine.Stages)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1237:24:0"
										}
									],
									"name": "cleanup",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1227:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 104,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1262:0:0"
									},
									"scope": 121,
									"src": "1211:103:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 119,
										"nodeType": "Block",
										"src": "1350:48:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 109,
														"name": "stage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "1360:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Stages_$6",
															"typeString": "enum StateMachine.Stages"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 115,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 112,
																			"name": "stage",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 10,
																			"src": "1380:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_enum$_Stages_$6",
																				"typeString": "enum StateMachine.Stages"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_enum$_Stages_$6",
																				"typeString": "enum StateMachine.Stages"
																			}
																		],
																		"id": 111,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1375:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": "uint"
																	},
																	"id": 113,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1375:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 114,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1389:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1375:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 110,
															"name": "Stages",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 6,
															"src": "1368:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_Stages_$6_$",
																"typeString": "type(enum StateMachine.Stages)"
															}
														},
														"id": 116,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1368:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Stages_$6",
															"typeString": "enum StateMachine.Stages"
														}
													},
													"src": "1360:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Stages_$6",
														"typeString": "enum StateMachine.Stages"
													}
												},
												"id": 118,
												"nodeType": "ExpressionStatement",
												"src": "1360:31:0"
											}
										]
									},
									"documentation": null,
									"id": 120,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "nextStage",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1338:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1350:0:0"
									},
									"scope": 121,
									"src": "1320:78:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 122,
							"src": "131:1269:0"
						}
					],
					"src": "105:1295:0"
				},
				"id": 0
			}
		}
	}
}